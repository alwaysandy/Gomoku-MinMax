<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AugmentWebviewStateStore">
    <option name="stateMap">
      <map>
        <entry key="CHAT_STATE" value="eyJjdXJyZW50Q29udmVyc2F0aW9uSWQiOiI3MGMwNTY3NS0xNGJhLTRmYzUtYmI0Zi1hMDAxOTY1OGZlODEiLCJjb252ZXJzYXRpb25zIjp7IjYwMmU3M2JhLTU5ZGUtNDEyMS04MGNmLTk1NTI3MmQwZjRiMCI6eyJpZCI6IjYwMmU3M2JhLTU5ZGUtNDEyMS04MGNmLTk1NTI3MmQwZjRiMCIsImNyZWF0ZWRBdElzbyI6IjIwMjUtMDMtMjhUMTc6MDc6MTQuNzY5WiIsImxhc3RJbnRlcmFjdGVkQXRJc28iOiIyMDI1LTAzLTMxVDIwOjAzOjEzLjkwN1oiLCJjaGF0SGlzdG9yeSI6W3sic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiIxM2FiZjhlNi05NGJlLTRhM2QtOTg2NC0yYWQzY2Y3Y2Q5NWUiLCJyZXF1ZXN0X21lc3NhZ2UiOiJ1cGRhdGUgdGhpcyB0byB1c2UgbWFrZU1vdmUiLCJyaWNoX3RleHRfanNvbl9yZXByIjp7InR5cGUiOiJkb2MiLCJjb250ZW50IjpbeyJ0eXBlIjoicGFyYWdyYXBoIiwiY29udGVudCI6W3sidHlwZSI6InRleHQiLCJ0ZXh0IjoidXBkYXRlIHRoaXMgdG8gdXNlIG1ha2VNb3ZlIn1dfV19LCJtZW50aW9uZWRfaXRlbXMiOltdLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjAsInR5cGUiOjAsImNvbnRlbnQiOiJJJ2xsIHVwZGF0ZSB0aGUgYG1ha2VNb3ZlYCBtZXRob2QgdG8gaW1wbGVtZW50IHRoZSBtaW5pbWF4IGFsZ29yaXRobSBmb3IgdGhlIEFJIHBsYXllcjpcblxuPGF1Z21lbnRfY29kZV9zbmlwcGV0IHBhdGg9XCJzcmMvUGxheWVyL0FJUGxheWVyLmphdmFcIiBtb2RlPVwiRURJVFwiPlxuYGBgamF2YVxuICAgIHB1YmxpYyBDZWxsUG9zIG1ha2VNb3ZlKEdhbWUgZ2FtZSkge1xuICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oXCJBSSBpcyBtYWtpbmcgYSBtb3ZlLi4uXCIpO1xuICAgICAgICBDZWxsUG9zIGJlc3RNb3ZlID0gbnVsbDtcbiAgICAgICAgaW50IGJlc3RTY29yZSA9IEludGVnZXIuTUlOX1ZBTFVFO1xuICAgICAgICBmb3IgKGludCBpID0gMDsgaSA8IGdhbWUuZ2V0U2l6ZSgpOyBpKyspIHtcbiAgICAgICAgICAgIGZvciAoaW50IGogPSAwOyBqIDwgZ2FtZS5nZXRTaXplKCk7IGorKykge1xuICAgICAgICAgICAgICAgIENlbGxQb3MgcG9zID0gbmV3IENlbGxQb3MoaSwgaik7XG4gICAgICAgICAgICAgICAgaWYgKCFnYW1lLmlzQ2VsbEVtcHR5KHBvcykpIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIEdhbWUgY29weSA9IGdhbWUuY29weSgpO1xuICAgICAgICAgICAgICAgIGNvcHkuc2V0Q2VsbChwb3MsIHRoaXMuZ2V0U3ltYm9sKCkpO1xuICAgICAgICAgICAgICAgIGludCBzY29yZSA9IHRoaXMubWluaU1heChjb3B5LCB0aGlzLmdldE9wcG9uZW50U3ltYm9sKCksIGZhbHNlKTtcbiAgICAgICAgICAgICAgICBpZiAoc2NvcmUgPiBiZXN0U2NvcmUpIHtcbiAgICAgICAgICAgICAgICAgICAgYmVzdFNjb3JlID0gc2NvcmU7XG4gICAgICAgICAgICAgICAgICAgIGJlc3RNb3ZlID0gcG9zO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYmVzdE1vdmU7XG4gICAgfVxuYGBgXG48L2F1Z21lbnRfY29kZV9zbmlwcGV0PlxuXG5UaGlzIGltcGxlbWVudGF0aW9uOlxuMS4gSXRlcmF0ZXMgdGhyb3VnaCBhbGwgZW1wdHkgY2VsbHMgb24gdGhlIGJvYXJkXG4yLiBGb3IgZWFjaCBlbXB0eSBjZWxsLCBjcmVhdGVzIGEgY29weSBvZiB0aGUgZ2FtZSBhbmQgc2ltdWxhdGVzIHBsYWNpbmcgdGhlIEFJJ3Mgc3ltYm9sXG4zLiBFdmFsdWF0ZXMgdGhlIG1vdmUgdXNpbmcgdGhlIG1pbmltYXggYWxnb3JpdGhtXG40LiBLZWVwcyB0cmFjayBvZiB0aGUgYmVzdCBtb3ZlIGZvdW5kXG41LiBSZXR1cm5zIHRoZSBiZXN0IG1vdmUgcG9zaXRpb25cbiJ9LHsiaWQiOjIsInR5cGUiOjIsImNvbnRlbnQiOiIifSx7ImlkIjozLCJ0eXBlIjozLCJjb250ZW50Ijoic3JjL1BsYXllci9BSVBsYXllci5qYXZhOjAtMzg3XG5zcmMvUGxheWVyL0FJUGxheWVyLmphdmE6Mzg3LTEyNDdcbnNyYy9QbGF5ZXIvSHVtYW5QbGF5ZXIuamF2YTowLTgwOVxuc3JjL1BsYXllci9IdW1hblBsYXllci5qYXZhOjgwOS0xNzEyXG5zcmMvTWFpbi5qYXZhOjAtNTk5XG5zcmMvTWFpbi5qYXZhOjU5OS0xMTI1XG5zcmMvTWFpbi5qYXZhOjExMjUtMTY3NFxuc3JjL0dhbWUvR2FtZS5qYXZhOjAtNTUxXG5zcmMvR2FtZS9HYW1lLmphdmE6NTUxLTE1MDJcbnNyYy9HYW1lL0dhbWUuamF2YToxNTAyLTE5OTZcbnNyYy9HYW1lL0dhbWUuamF2YToxOTk2LTMwNzJcbnNyYy9HYW1lL0dhbWUuamF2YTozMDcyLTM3NzFcbnNyYy9QbGF5ZXIvUGxheWVyLmphdmE6MC02MzdcbnNyYy9VdGlscy9JbnB1dC5qYXZhOjAtOTM4XG5zcmMvVXRpbHMvSW5wdXQuamF2YTo5MzgtMTU2MFxuc3JjL0dhbWUvQ2VsbFBvcy5qYXZhOjAtMTc0In1dLCJzZWVuX3N0YXRlIjoic2VlbiIsInJlc3BvbnNlX3RleHQiOiJJJ2xsIHVwZGF0ZSB0aGUgYG1ha2VNb3ZlYCBtZXRob2QgdG8gaW1wbGVtZW50IHRoZSBtaW5pbWF4IGFsZ29yaXRobSBmb3IgdGhlIEFJIHBsYXllcjpcblxuYGBgYGphdmEgcGF0aD1zcmMvUGxheWVyL0FJUGxheWVyLmphdmEgbW9kZT1FRElUXG4gICAgcHVibGljIENlbGxQb3MgbWFrZU1vdmUoR2FtZSBnYW1lKSB7XG4gICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihcIkFJIGlzIG1ha2luZyBhIG1vdmUuLi5cIik7XG4gICAgICAgIENlbGxQb3MgYmVzdE1vdmUgPSBudWxsO1xuICAgICAgICBpbnQgYmVzdFNjb3JlID0gSW50ZWdlci5NSU5fVkFMVUU7XG4gICAgICAgIGZvciAoaW50IGkgPSAwOyBpIDwgZ2FtZS5nZXRTaXplKCk7IGkrKykge1xuICAgICAgICAgICAgZm9yIChpbnQgaiA9IDA7IGogPCBnYW1lLmdldFNpemUoKTsgaisrKSB7XG4gICAgICAgICAgICAgICAgQ2VsbFBvcyBwb3MgPSBuZXcgQ2VsbFBvcyhpLCBqKTtcbiAgICAgICAgICAgICAgICBpZiAoIWdhbWUuaXNDZWxsRW1wdHkocG9zKSkgY29udGludWU7XG4gICAgICAgICAgICAgICAgR2FtZSBjb3B5ID0gZ2FtZS5jb3B5KCk7XG4gICAgICAgICAgICAgICAgY29weS5zZXRDZWxsKHBvcywgdGhpcy5nZXRTeW1ib2woKSk7XG4gICAgICAgICAgICAgICAgaW50IHNjb3JlID0gdGhpcy5taW5pTWF4KGNvcHksIHRoaXMuZ2V0T3Bwb25lbnRTeW1ib2woKSwgZmFsc2UpO1xuICAgICAgICAgICAgICAgIGlmIChzY29yZSA+IGJlc3RTY29yZSkge1xuICAgICAgICAgICAgICAgICAgICBiZXN0U2NvcmUgPSBzY29yZTtcbiAgICAgICAgICAgICAgICAgICAgYmVzdE1vdmUgPSBwb3M7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBiZXN0TW92ZTtcbiAgICB9XG5gYGBgXG5cblRoaXMgaW1wbGVtZW50YXRpb246XG4xLiBJdGVyYXRlcyB0aHJvdWdoIGFsbCBlbXB0eSBjZWxscyBvbiB0aGUgYm9hcmRcbjIuIEZvciBlYWNoIGVtcHR5IGNlbGwsIGNyZWF0ZXMgYSBjb3B5IG9mIHRoZSBnYW1lIGFuZCBzaW11bGF0ZXMgcGxhY2luZyB0aGUgQUkncyBzeW1ib2xcbjMuIEV2YWx1YXRlcyB0aGUgbW92ZSB1c2luZyB0aGUgbWluaW1heCBhbGdvcml0aG1cbjQuIEtlZXBzIHRyYWNrIG9mIHRoZSBiZXN0IG1vdmUgZm91bmRcbjUuIFJldHVybnMgdGhlIGJlc3QgbW92ZSBwb3NpdGlvblxuIiwid29ya3NwYWNlX2ZpbGVfY2h1bmtzIjpbeyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiMzg3IiwiYmxvYl9uYW1lIjoiNzU3MWIzNTNjNTc0YzZlODkwYTdjMDcwNmJiZTRmYzEyMTIwYzRmZGFjMzEyYWM0N2JkNDZiYzU5ZWI5MGE3ZSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9QbGF5ZXIvQUlQbGF5ZXIuamF2YSJ9fSx7ImNoYXJfc3RhcnQiOiIzODciLCJjaGFyX2VuZCI6IjEyNDciLCJibG9iX25hbWUiOiI3NTcxYjM1M2M1NzRjNmU4OTBhN2MwNzA2YmJlNGZjMTIxMjBjNGZkYWMzMTJhYzQ3YmQ0NmJjNTllYjkwYTdlIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL1BsYXllci9BSVBsYXllci5qYXZhIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjgwOSIsImJsb2JfbmFtZSI6IjE1NmNlZGQ2MGQ3ZDNkNzU2ZWM1NjZiNjI1NmMxNDU5NzVmNjhlYWY0ZmYxZjEzMmMwNDIxODgwYmMyMGYzZTQiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvUGxheWVyL0h1bWFuUGxheWVyLmphdmEifX0seyJjaGFyX3N0YXJ0IjoiODA5IiwiY2hhcl9lbmQiOiIxNzEyIiwiYmxvYl9uYW1lIjoiMTU2Y2VkZDYwZDdkM2Q3NTZlYzU2NmI2MjU2YzE0NTk3NWY2OGVhZjRmZjFmMTMyYzA0MjE4ODBiYzIwZjNlNCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9QbGF5ZXIvSHVtYW5QbGF5ZXIuamF2YSJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI1OTkiLCJibG9iX25hbWUiOiJhNzc4OTFlMGMzODdkODE3MzRmZTQzNWYyMmMyYjM1NTdjNmU5YTg2OTYyZjkxMzMxMDRmNzIyNjc5NTM4NmIxIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL01haW4uamF2YSJ9fSx7ImNoYXJfc3RhcnQiOiI1OTkiLCJjaGFyX2VuZCI6IjExMjUiLCJibG9iX25hbWUiOiJhNzc4OTFlMGMzODdkODE3MzRmZTQzNWYyMmMyYjM1NTdjNmU5YTg2OTYyZjkxMzMxMDRmNzIyNjc5NTM4NmIxIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL01haW4uamF2YSJ9fSx7ImNoYXJfc3RhcnQiOiIxMTI1IiwiY2hhcl9lbmQiOiIxNjc0IiwiYmxvYl9uYW1lIjoiYTc3ODkxZTBjMzg3ZDgxNzM0ZmU0MzVmMjJjMmIzNTU3YzZlOWE4Njk2MmY5MTMzMTA0ZjcyMjY3OTUzODZiMSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9NYWluLmphdmEifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNTUxIiwiYmxvYl9uYW1lIjoiN2I0OTZjMDlkMDgzZmZiZDg0M2Q2ZWU5MDA1ZmFhZTU1YTJkODBhM2FkZDJlZDc2YjVmMWI2MDI4M2ExZTFkOSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9HYW1lL0dhbWUuamF2YSJ9fSx7ImNoYXJfc3RhcnQiOiI1NTEiLCJjaGFyX2VuZCI6IjE1MDIiLCJibG9iX25hbWUiOiI3YjQ5NmMwOWQwODNmZmJkODQzZDZlZTkwMDVmYWFlNTVhMmQ4MGEzYWRkMmVkNzZiNWYxYjYwMjgzYTFlMWQ5IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL0dhbWUvR2FtZS5qYXZhIn19LHsiY2hhcl9zdGFydCI6IjE1MDIiLCJjaGFyX2VuZCI6IjE5OTYiLCJibG9iX25hbWUiOiI3YjQ5NmMwOWQwODNmZmJkODQzZDZlZTkwMDVmYWFlNTVhMmQ4MGEzYWRkMmVkNzZiNWYxYjYwMjgzYTFlMWQ5IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL0dhbWUvR2FtZS5qYXZhIn19LHsiY2hhcl9zdGFydCI6IjE5OTYiLCJjaGFyX2VuZCI6IjMwNzIiLCJibG9iX25hbWUiOiI3YjQ5NmMwOWQwODNmZmJkODQzZDZlZTkwMDVmYWFlNTVhMmQ4MGEzYWRkMmVkNzZiNWYxYjYwMjgzYTFlMWQ5IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL0dhbWUvR2FtZS5qYXZhIn19LHsiY2hhcl9zdGFydCI6IjMwNzIiLCJjaGFyX2VuZCI6IjM3NzEiLCJibG9iX25hbWUiOiI3YjQ5NmMwOWQwODNmZmJkODQzZDZlZTkwMDVmYWFlNTVhMmQ4MGEzYWRkMmVkNzZiNWYxYjYwMjgzYTFlMWQ5IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL0dhbWUvR2FtZS5qYXZhIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjYzNyIsImJsb2JfbmFtZSI6ImFlODU1MGYxYmViZWY2NGI0MTFhMjkyOWY1OGM2MmUyMTJkNzk5N2I3ZDQ3ZTdhNTJlNTYxN2JjYzgzZDViMGUiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvUGxheWVyL1BsYXllci5qYXZhIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjkzOCIsImJsb2JfbmFtZSI6ImQzODQ2OTBkNjVkZWI2MTk3MDY1ZWZlYzJmM2E2OTJhNTE2NTczZmZmMWJlMTU2NzliMzY1YzIzYjI2M2IxMWYiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvVXRpbHMvSW5wdXQuamF2YSJ9fSx7ImNoYXJfc3RhcnQiOiI5MzgiLCJjaGFyX2VuZCI6IjE1NjAiLCJibG9iX25hbWUiOiJkMzg0NjkwZDY1ZGViNjE5NzA2NWVmZWMyZjNhNjkyYTUxNjU3M2ZmZjFiZTE1Njc5YjM2NWMyM2IyNjNiMTFmIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL1V0aWxzL0lucHV0LmphdmEifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiMTc0IiwiYmxvYl9uYW1lIjoiYzcxMTc2NGNkYmQ3NWQxNTIzYTY0Mzg3NDRiOTFlYWRlMmZiOGYxNWI5ZmRmZmFjNTM2N2UyN2EzMTU1MDc4ZSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9HYW1lL0NlbGxQb3MuamF2YSJ9fV19LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiIzZjFlOWM4Mi1kMTUyLTRjMDEtYjA5ZS0yMjVlZjMzNWM3YjYiLCJyZXF1ZXN0X21lc3NhZ2UiOiJmaXggYW55IHByb2JsZW0gd2l0aCB0aGlzIiwicmljaF90ZXh0X2pzb25fcmVwciI6eyJ0eXBlIjoiZG9jIiwiY29udGVudCI6W3sidHlwZSI6InBhcmFncmFwaCIsImNvbnRlbnQiOlt7InR5cGUiOiJ0ZXh0IiwidGV4dCI6ImZpeCBhbnkgcHJvYmxlbSB3aXRoIHRoaXMifV19XX0sIm1lbnRpb25lZF9pdGVtcyI6W10sInN0cnVjdHVyZWRfb3V0cHV0X25vZGVzIjpbeyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IlRoZSBtaW5pbWF4IGltcGxlbWVudGF0aW9uIGhhcyBhIGZldyBpc3N1ZXMuIEhlcmUncyB0aGUgZml4ZWQgdmVyc2lvbjpcblxuPGF1Z21lbnRfY29kZV9zbmlwcGV0IHBhdGg9XCJzcmMvUGxheWVyL0FJUGxheWVyLmphdmFcIiBtb2RlPVwiRURJVFwiPlxuYGBgamF2YVxucGFja2FnZSBQbGF5ZXI7XG5cbmltcG9ydCBHYW1lLkdhbWU7XG5pbXBvcnQgR2FtZS5DZWxsUG9zO1xuXG5wdWJsaWMgY2xhc3MgQUlQbGF5ZXIgZXh0ZW5kcyBQbGF5ZXJ7XG4gICAgcHVibGljIEFJUGxheWVyKGNoYXJbXSBhdmFpbGFibGVTeW1ib2xzKSB7XG4gICAgICAgIHN1cGVyKGF2YWlsYWJsZVN5bWJvbHMpO1xuICAgIH1cblxuICAgIEBPdmVycmlkZVxuICAgIHByb3RlY3RlZCBTdHJpbmcgaW5pdGlhbGl6ZU5hbWUoKSB7XG4gICAgICAgIHJldHVybiBcIkJhbUJvdFwiO1xuICAgIH1cblxuICAgIEBPdmVycmlkZVxuICAgIHByb3RlY3RlZCBjaGFyIGluaXRpYWxpemVTeW1ib2woY2hhcltdIGF2YWlsYWJsZVN5bWJvbHMpIHtcbiAgICAgICAgcmV0dXJuIGF2YWlsYWJsZVN5bWJvbHNbMF07XG4gICAgfVxuXG4gICAgQE92ZXJyaWRlXG4gICAgcHVibGljIENlbGxQb3MgbWFrZU1vdmUoR2FtZSBnYW1lKSB7XG4gICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihcIkFJIGlzIG1ha2luZyBhIG1vdmUuLi5cIik7XG4gICAgICAgIENlbGxQb3MgYmVzdE1vdmUgPSBudWxsO1xuICAgICAgICBpbnQgYmVzdFNjb3JlID0gSW50ZWdlci5NSU5fVkFMVUU7XG4gICAgICAgIGZvciAoaW50IGkgPSAwOyBpIDwgZ2FtZS5nZXRTaXplKCk7IGkrKykge1xuICAgICAgICAgICAgZm9yIChpbnQgaiA9IDA7IGogPCBnYW1lLmdldFNpemUoKTsgaisrKSB7XG4gICAgICAgICAgICAgICAgQ2VsbFBvcyBwb3MgPSBuZXcgQ2VsbFBvcyhpLCBqKTtcbiAgICAgICAgICAgICAgICBpZiAoIWdhbWUuaXNDZWxsRW1wdHkocG9zKSkgY29udGludWU7XG4gICAgICAgICAgICAgICAgR2FtZSBjb3B5ID0gZ2FtZS5jb3B5KCk7XG4gICAgICAgICAgICAgICAgY29weS5zZXRDZWxsKHBvcywgdGhpcy5nZXRTeW1ib2woKSk7XG4gICAgICAgICAgICAgICAgaW50IHNjb3JlID0gbWluaU1heChjb3B5LCAwLCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgaWYgKHNjb3JlID4gYmVzdFNjb3JlKSB7XG4gICAgICAgICAgICAgICAgICAgIGJlc3RTY29yZSA9IHNjb3JlO1xuICAgICAgICAgICAgICAgICAgICBiZXN0TW92ZSA9IHBvcztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGJlc3RNb3ZlO1xuICAgIH1cblxuICAgIHByaXZhdGUgaW50IG1pbmlNYXgoR2FtZSBnYW1lLCBpbnQgZGVwdGgsIGJvb2xlYW4gaXNNYXhpbWl6aW5nKSB7XG4gICAgICAgIC8vIENoZWNrIHRlcm1pbmFsIHN0YXRlc1xuICAgICAgICBmb3IgKGludCBpID0gMDsgaSA8IGdhbWUuZ2V0U2l6ZSgpOyBpKyspIHtcbiAgICAgICAgICAgIGZvciAoaW50IGogPSAwOyBqIDwgZ2FtZS5nZXRTaXplKCk7IGorKykge1xuICAgICAgICAgICAgICAgIENlbGxQb3MgcG9zID0gbmV3IENlbGxQb3MoaSwgaik7XG4gICAgICAgICAgICAgICAgaWYgKGdhbWUuaXNDZWxsRW1wdHkocG9zKSkgY29udGludWU7XG4gICAgICAgICAgICAgICAgaWYgKGdhbWUuY2hlY2tGb3JXaW4ocG9zKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZ2FtZS5ib2FyZFtpXVtqXSA9PSB0aGlzLmdldFN5bWJvbCgpID8gMTAgLSBkZXB0aCA6IGRlcHRoIC0gMTA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBpZiAoZ2FtZS5pc0RyYXcoKSkgcmV0dXJuIDA7XG4gICAgICAgIFxuICAgICAgICBpZiAoaXNNYXhpbWl6aW5nKSB7XG4gICAgICAgICAgICBpbnQgbWF4U2NvcmUgPSBJbnRlZ2VyLk1JTl9WQUxVRTtcbiAgICAgICAgICAgIGZvciAoaW50IGkgPSAwOyBpIDwgZ2FtZS5nZXRTaXplKCk7IGkrKykge1xuICAgICAgICAgICAgICAgIGZvciAoaW50IGogPSAwOyBqIDwgZ2FtZS5nZXRTaXplKCk7IGorKykge1xuICAgICAgICAgICAgICAgICAgICBDZWxsUG9zIHBvcyA9IG5ldyBDZWxsUG9zKGksIGopO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWdhbWUuaXNDZWxsRW1wdHkocG9zKSkgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgIEdhbWUgY29weSA9IGdhbWUuY29weSgpO1xuICAgICAgICAgICAgICAgICAgICBjb3B5LnNldENlbGwocG9zLCB0aGlzLmdldFN5bWJvbCgpKTtcbiAgICAgICAgICAgICAgICAgICAgaW50IHNjb3JlID0gbWluaU1heChjb3B5LCBkZXB0aCArIDEsIGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgbWF4U2NvcmUgPSBNYXRoLm1heChtYXhTY29yZSwgc2NvcmUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBtYXhTY29yZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGludCBtaW5TY29yZSA9IEludGVnZXIuTUFYX1ZBTFVFO1xuICAgICAgICAgICAgZm9yIChpbnQgaSA9IDA7IGkgPCBnYW1lLmdldFNpemUoKTsgaSsrKSB7XG4gICAgICAgICAgICAgICAgZm9yIChpbnQgaiA9IDA7IGogPCBnYW1lLmdldFNpemUoKTsgaisrKSB7XG4gICAgICAgICAgICAgICAgICAgIENlbGxQb3MgcG9zID0gbmV3IENlbGxQb3MoaSwgaik7XG4gICAgICAgICAgICAgICAgICAgIGlmICghZ2FtZS5pc0NlbGxFbXB0eShwb3MpKSBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgR2FtZSBjb3B5ID0gZ2FtZS5jb3B5KCk7XG4gICAgICAgICAgICAgICAgICAgIGNvcHkuc2V0Q2VsbChwb3MsIHRoaXMuZ2V0T3Bwb25lbnRTeW1ib2woKSk7XG4gICAgICAgICAgICAgICAgICAgIGludCBzY29yZSA9IG1pbmlNYXgoY29weSwgZGVwdGggKyAxLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgbWluU2NvcmUgPSBNYXRoLm1pbihtaW5TY29yZSwgc2NvcmUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBtaW5TY29yZTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmBgYFxuPC9hdWdtZW50X2NvZGVfc25pcHBldD5cblxuVGhlIG1haW4gZml4ZXMgaW5jbHVkZTpcbjEuIEFkZGVkIGRlcHRoIHBhcmFtZXRlciB0byBmYXZvciBzaG9ydGVyIHdpbm5pbmcgcGF0aHNcbjIuIEZpeGVkIHRlcm1pbmFsIHN0YXRlIGNoZWNraW5nIHRvIGV2YWx1YXRlIHRoZSBlbnRpcmUgYm9hcmRcbjMuIFNpbXBsaWZpZWQgdGhlIG1pbmltYXggZnVuY3Rpb24gdG8gdXNlIHRoZSBwbGF5ZXIncyBzeW1ib2wgZm9yIG1heGltaXppbmcgYW5kIG9wcG9uZW50J3Mgc3ltYm9sIGZvciBtaW5pbWl6aW5nXG40LiBJbXByb3ZlZCBzY29yaW5nIHRvIGFjY291bnQgZm9yIGRlcHRoIChxdWlja2VyIHdpbnMgYXJlIGJldHRlcilcbjUuIEZpeGVkIHRoZSBpbml0aWFsIG1pbmltYXggY2FsbCBpbiBtYWtlTW92ZVxuXG5Ob3RlOiBUaGVyZSdzIGEgcmVmZXJlbmNlIHRvIGBnYW1lLmJvYXJkYCB3aGljaCBtaWdodCBuZWVkIHRvIGJlIGFjY2Vzc2VkIHRocm91Z2ggYSBnZXR0ZXIgaWYgdGhlIGJvYXJkIGlzIHByaXZhdGUgaW4gdGhlIEdhbWUgY2xhc3MuXG4ifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6InNyYy9QbGF5ZXIvQUlQbGF5ZXIuamF2YTowLTM4N1xuc3JjL1BsYXllci9BSVBsYXllci5qYXZhOjM4Ny0xMTQ2XG5zcmMvUGxheWVyL0FJUGxheWVyLmphdmE6MTE0Ni0xODU2XG5zcmMvUGxheWVyL0FJUGxheWVyLmphdmE6MTg1Ni0yNTYzXG5zcmMvTWFpbi5qYXZhOjAtNTk5XG5zcmMvTWFpbi5qYXZhOjU5OS0xMjA3XG5zcmMvTWFpbi5qYXZhOjEyMDctMTc1Nlxuc3JjL1BsYXllci9QbGF5ZXIuamF2YTowLTYzN1xuc3JjL0dhbWUvR2FtZS5qYXZhOjAtNTUxXG5zcmMvR2FtZS9HYW1lLmphdmE6NTUxLTE1MDJcbnNyYy9HYW1lL0dhbWUuamF2YToxNTAyLTE5OTZcbnNyYy9HYW1lL0dhbWUuamF2YToxOTk2LTMwNzJcbnNyYy9HYW1lL0dhbWUuamF2YTozMDcyLTM3NzFcbnNyYy9QbGF5ZXIvSHVtYW5QbGF5ZXIuamF2YTowLTgwOVxuc3JjL1BsYXllci9IdW1hblBsYXllci5qYXZhOjgwOS0xNzEyXG5zcmMvVXRpbHMvSW5wdXQuamF2YTowLTkzOFxuc3JjL1V0aWxzL0lucHV0LmphdmE6OTM4LTE1NjBcbnNyYy9HYW1lL0NlbGxQb3MuamF2YTowLTE3NCJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJyZXNwb25zZV90ZXh0IjoiVGhlIG1pbmltYXggaW1wbGVtZW50YXRpb24gaGFzIGEgZmV3IGlzc3Vlcy4gSGVyZSdzIHRoZSBmaXhlZCB2ZXJzaW9uOlxuXG5gYGBgamF2YSBwYXRoPXNyYy9QbGF5ZXIvQUlQbGF5ZXIuamF2YSBtb2RlPUVESVRcbnBhY2thZ2UgUGxheWVyO1xuXG5pbXBvcnQgR2FtZS5HYW1lO1xuaW1wb3J0IEdhbWUuQ2VsbFBvcztcblxucHVibGljIGNsYXNzIEFJUGxheWVyIGV4dGVuZHMgUGxheWVye1xuICAgIHB1YmxpYyBBSVBsYXllcihjaGFyW10gYXZhaWxhYmxlU3ltYm9scykge1xuICAgICAgICBzdXBlcihhdmFpbGFibGVTeW1ib2xzKTtcbiAgICB9XG5cbiAgICBAT3ZlcnJpZGVcbiAgICBwcm90ZWN0ZWQgU3RyaW5nIGluaXRpYWxpemVOYW1lKCkge1xuICAgICAgICByZXR1cm4gXCJCYW1Cb3RcIjtcbiAgICB9XG5cbiAgICBAT3ZlcnJpZGVcbiAgICBwcm90ZWN0ZWQgY2hhciBpbml0aWFsaXplU3ltYm9sKGNoYXJbXSBhdmFpbGFibGVTeW1ib2xzKSB7XG4gICAgICAgIHJldHVybiBhdmFpbGFibGVTeW1ib2xzWzBdO1xuICAgIH1cblxuICAgIEBPdmVycmlkZVxuICAgIHB1YmxpYyBDZWxsUG9zIG1ha2VNb3ZlKEdhbWUgZ2FtZSkge1xuICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oXCJBSSBpcyBtYWtpbmcgYSBtb3ZlLi4uXCIpO1xuICAgICAgICBDZWxsUG9zIGJlc3RNb3ZlID0gbnVsbDtcbiAgICAgICAgaW50IGJlc3RTY29yZSA9IEludGVnZXIuTUlOX1ZBTFVFO1xuICAgICAgICBmb3IgKGludCBpID0gMDsgaSA8IGdhbWUuZ2V0U2l6ZSgpOyBpKyspIHtcbiAgICAgICAgICAgIGZvciAoaW50IGogPSAwOyBqIDwgZ2FtZS5nZXRTaXplKCk7IGorKykge1xuICAgICAgICAgICAgICAgIENlbGxQb3MgcG9zID0gbmV3IENlbGxQb3MoaSwgaik7XG4gICAgICAgICAgICAgICAgaWYgKCFnYW1lLmlzQ2VsbEVtcHR5KHBvcykpIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIEdhbWUgY29weSA9IGdhbWUuY29weSgpO1xuICAgICAgICAgICAgICAgIGNvcHkuc2V0Q2VsbChwb3MsIHRoaXMuZ2V0U3ltYm9sKCkpO1xuICAgICAgICAgICAgICAgIGludCBzY29yZSA9IG1pbmlNYXgoY29weSwgMCwgZmFsc2UpO1xuICAgICAgICAgICAgICAgIGlmIChzY29yZSA+IGJlc3RTY29yZSkge1xuICAgICAgICAgICAgICAgICAgICBiZXN0U2NvcmUgPSBzY29yZTtcbiAgICAgICAgICAgICAgICAgICAgYmVzdE1vdmUgPSBwb3M7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBiZXN0TW92ZTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGludCBtaW5pTWF4KEdhbWUgZ2FtZSwgaW50IGRlcHRoLCBib29sZWFuIGlzTWF4aW1pemluZykge1xuICAgICAgICAvLyBDaGVjayB0ZXJtaW5hbCBzdGF0ZXNcbiAgICAgICAgZm9yIChpbnQgaSA9IDA7IGkgPCBnYW1lLmdldFNpemUoKTsgaSsrKSB7XG4gICAgICAgICAgICBmb3IgKGludCBqID0gMDsgaiA8IGdhbWUuZ2V0U2l6ZSgpOyBqKyspIHtcbiAgICAgICAgICAgICAgICBDZWxsUG9zIHBvcyA9IG5ldyBDZWxsUG9zKGksIGopO1xuICAgICAgICAgICAgICAgIGlmIChnYW1lLmlzQ2VsbEVtcHR5KHBvcykpIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIGlmIChnYW1lLmNoZWNrRm9yV2luKHBvcykpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGdhbWUuYm9hcmRbaV1bal0gPT0gdGhpcy5nZXRTeW1ib2woKSA/IDEwIC0gZGVwdGggOiBkZXB0aCAtIDEwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgaWYgKGdhbWUuaXNEcmF3KCkpIHJldHVybiAwO1xuICAgICAgICBcbiAgICAgICAgaWYgKGlzTWF4aW1pemluZykge1xuICAgICAgICAgICAgaW50IG1heFNjb3JlID0gSW50ZWdlci5NSU5fVkFMVUU7XG4gICAgICAgICAgICBmb3IgKGludCBpID0gMDsgaSA8IGdhbWUuZ2V0U2l6ZSgpOyBpKyspIHtcbiAgICAgICAgICAgICAgICBmb3IgKGludCBqID0gMDsgaiA8IGdhbWUuZ2V0U2l6ZSgpOyBqKyspIHtcbiAgICAgICAgICAgICAgICAgICAgQ2VsbFBvcyBwb3MgPSBuZXcgQ2VsbFBvcyhpLCBqKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFnYW1lLmlzQ2VsbEVtcHR5KHBvcykpIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgICBHYW1lIGNvcHkgPSBnYW1lLmNvcHkoKTtcbiAgICAgICAgICAgICAgICAgICAgY29weS5zZXRDZWxsKHBvcywgdGhpcy5nZXRTeW1ib2woKSk7XG4gICAgICAgICAgICAgICAgICAgIGludCBzY29yZSA9IG1pbmlNYXgoY29weSwgZGVwdGggKyAxLCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgIG1heFNjb3JlID0gTWF0aC5tYXgobWF4U2NvcmUsIHNjb3JlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbWF4U2NvcmU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpbnQgbWluU2NvcmUgPSBJbnRlZ2VyLk1BWF9WQUxVRTtcbiAgICAgICAgICAgIGZvciAoaW50IGkgPSAwOyBpIDwgZ2FtZS5nZXRTaXplKCk7IGkrKykge1xuICAgICAgICAgICAgICAgIGZvciAoaW50IGogPSAwOyBqIDwgZ2FtZS5nZXRTaXplKCk7IGorKykge1xuICAgICAgICAgICAgICAgICAgICBDZWxsUG9zIHBvcyA9IG5ldyBDZWxsUG9zKGksIGopO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWdhbWUuaXNDZWxsRW1wdHkocG9zKSkgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgIEdhbWUgY29weSA9IGdhbWUuY29weSgpO1xuICAgICAgICAgICAgICAgICAgICBjb3B5LnNldENlbGwocG9zLCB0aGlzLmdldE9wcG9uZW50U3ltYm9sKCkpO1xuICAgICAgICAgICAgICAgICAgICBpbnQgc2NvcmUgPSBtaW5pTWF4KGNvcHksIGRlcHRoICsgMSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIG1pblNjb3JlID0gTWF0aC5taW4obWluU2NvcmUsIHNjb3JlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbWluU2NvcmU7XG4gICAgICAgIH1cbiAgICB9XG59XG5gYGBgXG5cblRoZSBtYWluIGZpeGVzIGluY2x1ZGU6XG4xLiBBZGRlZCBkZXB0aCBwYXJhbWV0ZXIgdG8gZmF2b3Igc2hvcnRlciB3aW5uaW5nIHBhdGhzXG4yLiBGaXhlZCB0ZXJtaW5hbCBzdGF0ZSBjaGVja2luZyB0byBldmFsdWF0ZSB0aGUgZW50aXJlIGJvYXJkXG4zLiBTaW1wbGlmaWVkIHRoZSBtaW5pbWF4IGZ1bmN0aW9uIHRvIHVzZSB0aGUgcGxheWVyJ3Mgc3ltYm9sIGZvciBtYXhpbWl6aW5nIGFuZCBvcHBvbmVudCdzIHN5bWJvbCBmb3IgbWluaW1pemluZ1xuNC4gSW1wcm92ZWQgc2NvcmluZyB0byBhY2NvdW50IGZvciBkZXB0aCAocXVpY2tlciB3aW5zIGFyZSBiZXR0ZXIpXG41LiBGaXhlZCB0aGUgaW5pdGlhbCBtaW5pbWF4IGNhbGwgaW4gbWFrZU1vdmVcblxuTm90ZTogVGhlcmUncyBhIHJlZmVyZW5jZSB0byBgZ2FtZS5ib2FyZGAgd2hpY2ggbWlnaHQgbmVlZCB0byBiZSBhY2Nlc3NlZCB0aHJvdWdoIGEgZ2V0dGVyIGlmIHRoZSBib2FyZCBpcyBwcml2YXRlIGluIHRoZSBHYW1lIGNsYXNzLlxuIiwid29ya3NwYWNlX2ZpbGVfY2h1bmtzIjpbeyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiMzg3IiwiYmxvYl9uYW1lIjoiMzExM2Y0YmRjNjU5NGQ1YWU1NjkyYTdhY2M1ZDMxZjA3NGVhNjc1ZTY3NTM1YTdlNzk3MjgxMDA5M2FmYmM2YyIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9QbGF5ZXIvQUlQbGF5ZXIuamF2YSJ9fSx7ImNoYXJfc3RhcnQiOiIzODciLCJjaGFyX2VuZCI6IjExNDYiLCJibG9iX25hbWUiOiIzMTEzZjRiZGM2NTk0ZDVhZTU2OTJhN2FjYzVkMzFmMDc0ZWE2NzVlNjc1MzVhN2U3OTcyODEwMDkzYWZiYzZjIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL1BsYXllci9BSVBsYXllci5qYXZhIn19LHsiY2hhcl9zdGFydCI6IjExNDYiLCJjaGFyX2VuZCI6IjE4NTYiLCJibG9iX25hbWUiOiIzMTEzZjRiZGM2NTk0ZDVhZTU2OTJhN2FjYzVkMzFmMDc0ZWE2NzVlNjc1MzVhN2U3OTcyODEwMDkzYWZiYzZjIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL1BsYXllci9BSVBsYXllci5qYXZhIn19LHsiY2hhcl9zdGFydCI6IjE4NTYiLCJjaGFyX2VuZCI6IjI1NjMiLCJibG9iX25hbWUiOiIzMTEzZjRiZGM2NTk0ZDVhZTU2OTJhN2FjYzVkMzFmMDc0ZWE2NzVlNjc1MzVhN2U3OTcyODEwMDkzYWZiYzZjIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL1BsYXllci9BSVBsYXllci5qYXZhIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjU5OSIsImJsb2JfbmFtZSI6ImVjMWI5NGZkODE2MTRjYzZmOTYzNjViNWU2NGVmMTkzYTA2MTYzZDhhZDU0MTYyYzE4YzQ5MTRkYTgzZTJjYjUiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvTWFpbi5qYXZhIn19LHsiY2hhcl9zdGFydCI6IjU5OSIsImNoYXJfZW5kIjoiMTIwNyIsImJsb2JfbmFtZSI6ImVjMWI5NGZkODE2MTRjYzZmOTYzNjViNWU2NGVmMTkzYTA2MTYzZDhhZDU0MTYyYzE4YzQ5MTRkYTgzZTJjYjUiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvTWFpbi5qYXZhIn19LHsiY2hhcl9zdGFydCI6IjEyMDciLCJjaGFyX2VuZCI6IjE3NTYiLCJibG9iX25hbWUiOiJlYzFiOTRmZDgxNjE0Y2M2Zjk2MzY1YjVlNjRlZjE5M2EwNjE2M2Q4YWQ1NDE2MmMxOGM0OTE0ZGE4M2UyY2I1IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL01haW4uamF2YSJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI2MzciLCJibG9iX25hbWUiOiJhZTg1NTBmMWJlYmVmNjRiNDExYTI5MjlmNThjNjJlMjEyZDc5OTdiN2Q0N2U3YTUyZTU2MTdiY2M4M2Q1YjBlIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL1BsYXllci9QbGF5ZXIuamF2YSJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI1NTEiLCJibG9iX25hbWUiOiI3YjQ5NmMwOWQwODNmZmJkODQzZDZlZTkwMDVmYWFlNTVhMmQ4MGEzYWRkMmVkNzZiNWYxYjYwMjgzYTFlMWQ5IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL0dhbWUvR2FtZS5qYXZhIn19LHsiY2hhcl9zdGFydCI6IjU1MSIsImNoYXJfZW5kIjoiMTUwMiIsImJsb2JfbmFtZSI6IjdiNDk2YzA5ZDA4M2ZmYmQ4NDNkNmVlOTAwNWZhYWU1NWEyZDgwYTNhZGQyZWQ3NmI1ZjFiNjAyODNhMWUxZDkiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvR2FtZS9HYW1lLmphdmEifX0seyJjaGFyX3N0YXJ0IjoiMTUwMiIsImNoYXJfZW5kIjoiMTk5NiIsImJsb2JfbmFtZSI6IjdiNDk2YzA5ZDA4M2ZmYmQ4NDNkNmVlOTAwNWZhYWU1NWEyZDgwYTNhZGQyZWQ3NmI1ZjFiNjAyODNhMWUxZDkiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvR2FtZS9HYW1lLmphdmEifX0seyJjaGFyX3N0YXJ0IjoiMTk5NiIsImNoYXJfZW5kIjoiMzA3MiIsImJsb2JfbmFtZSI6IjdiNDk2YzA5ZDA4M2ZmYmQ4NDNkNmVlOTAwNWZhYWU1NWEyZDgwYTNhZGQyZWQ3NmI1ZjFiNjAyODNhMWUxZDkiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvR2FtZS9HYW1lLmphdmEifX0seyJjaGFyX3N0YXJ0IjoiMzA3MiIsImNoYXJfZW5kIjoiMzc3MSIsImJsb2JfbmFtZSI6IjdiNDk2YzA5ZDA4M2ZmYmQ4NDNkNmVlOTAwNWZhYWU1NWEyZDgwYTNhZGQyZWQ3NmI1ZjFiNjAyODNhMWUxZDkiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvR2FtZS9HYW1lLmphdmEifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiODA5IiwiYmxvYl9uYW1lIjoiMTU2Y2VkZDYwZDdkM2Q3NTZlYzU2NmI2MjU2YzE0NTk3NWY2OGVhZjRmZjFmMTMyYzA0MjE4ODBiYzIwZjNlNCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9QbGF5ZXIvSHVtYW5QbGF5ZXIuamF2YSJ9fSx7ImNoYXJfc3RhcnQiOiI4MDkiLCJjaGFyX2VuZCI6IjE3MTIiLCJibG9iX25hbWUiOiIxNTZjZWRkNjBkN2QzZDc1NmVjNTY2YjYyNTZjMTQ1OTc1ZjY4ZWFmNGZmMWYxMzJjMDQyMTg4MGJjMjBmM2U0IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL1BsYXllci9IdW1hblBsYXllci5qYXZhIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjkzOCIsImJsb2JfbmFtZSI6ImQzODQ2OTBkNjVkZWI2MTk3MDY1ZWZlYzJmM2E2OTJhNTE2NTczZmZmMWJlMTU2NzliMzY1YzIzYjI2M2IxMWYiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvVXRpbHMvSW5wdXQuamF2YSJ9fSx7ImNoYXJfc3RhcnQiOiI5MzgiLCJjaGFyX2VuZCI6IjE1NjAiLCJibG9iX25hbWUiOiJkMzg0NjkwZDY1ZGViNjE5NzA2NWVmZWMyZjNhNjkyYTUxNjU3M2ZmZjFiZTE1Njc5YjM2NWMyM2IyNjNiMTFmIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL1V0aWxzL0lucHV0LmphdmEifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiMTc0IiwiYmxvYl9uYW1lIjoiYzcxMTc2NGNkYmQ3NWQxNTIzYTY0Mzg3NDRiOTFlYWRlMmZiOGYxNWI5ZmRmZmFjNTM2N2UyN2EzMTU1MDc4ZSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9HYW1lL0NlbGxQb3MuamF2YSJ9fV19LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiI2OGFlYzEyNS0yN2ViLTQyMjMtYjBlNC04ZWRlYTUzNmI2MGYiLCJyZXF1ZXN0X21lc3NhZ2UiOiJyZWZhY3RvciB0aGlzIGNvZGUiLCJyaWNoX3RleHRfanNvbl9yZXByIjp7InR5cGUiOiJkb2MiLCJjb250ZW50IjpbeyJ0eXBlIjoicGFyYWdyYXBoIiwiY29udGVudCI6W3sidHlwZSI6InRleHQiLCJ0ZXh0IjoicmVmYWN0b3IgdGhpcyBjb2RlIn1dfV19LCJtZW50aW9uZWRfaXRlbXMiOltdLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjAsInR5cGUiOjAsImNvbnRlbnQiOiJIZXJlJ3MgYSByZWZhY3RvcmVkIHZlcnNpb24gb2YgdGhlIG1pbmltYXggYWxnb3JpdGhtIHRoYXQncyBtb3JlIGVmZmljaWVudCBhbmQgcmVhZGFibGU6XG5cbjxhdWdtZW50X2NvZGVfc25pcHBldCBwYXRoPVwic3JjL1BsYXllci9BSVBsYXllci5qYXZhXCIgbW9kZT1cIkVESVRcIj5cbmBgYGphdmFcbiAgICBwcml2YXRlIGludCBtaW5pTWF4KEdhbWUgZ2FtZSwgaW50IGRlcHRoLCBib29sZWFuIGlzTWF4aW1pemluZykge1xuICAgICAgICAvLyBDaGVjayBmb3IgdGVybWluYWwgc3RhdGVzXG4gICAgICAgIGlmIChjaGVja1dpblN0YXRlKGdhbWUpKSB7XG4gICAgICAgICAgICByZXR1cm4gZXZhbHVhdGVXaW5TdGF0ZShnYW1lLCBkZXB0aCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGdhbWUuaXNEcmF3KCkpIHJldHVybiAwO1xuICAgICAgICBcbiAgICAgICAgLy8gUmVjdXJzaXZlIGNhc2VcbiAgICAgICAgaWYgKGlzTWF4aW1pemluZykge1xuICAgICAgICAgICAgcmV0dXJuIGZpbmRCZXN0TWF4aW1pemluZ01vdmUoZ2FtZSwgZGVwdGgpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIGZpbmRCZXN0TWluaW1pemluZ01vdmUoZ2FtZSwgZGVwdGgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIHByaXZhdGUgYm9vbGVhbiBjaGVja1dpblN0YXRlKEdhbWUgZ2FtZSkge1xuICAgICAgICBmb3IgKGludCBpID0gMDsgaSA8IGdhbWUuZ2V0U2l6ZSgpOyBpKyspIHtcbiAgICAgICAgICAgIGZvciAoaW50IGogPSAwOyBqIDwgZ2FtZS5nZXRTaXplKCk7IGorKykge1xuICAgICAgICAgICAgICAgIENlbGxQb3MgcG9zID0gbmV3IENlbGxQb3MoaSwgaik7XG4gICAgICAgICAgICAgICAgaWYgKGdhbWUuaXNDZWxsRW1wdHkocG9zKSkgY29udGludWU7XG4gICAgICAgICAgICAgICAgaWYgKGdhbWUuY2hlY2tGb3JXaW4ocG9zKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBcbiAgICBwcml2YXRlIGludCBldmFsdWF0ZVdpblN0YXRlKEdhbWUgZ2FtZSwgaW50IGRlcHRoKSB7XG4gICAgICAgIGZvciAoaW50IGkgPSAwOyBpIDwgZ2FtZS5nZXRTaXplKCk7IGkrKykge1xuICAgICAgICAgICAgZm9yIChpbnQgaiA9IDA7IGogPCBnYW1lLmdldFNpemUoKTsgaisrKSB7XG4gICAgICAgICAgICAgICAgQ2VsbFBvcyBwb3MgPSBuZXcgQ2VsbFBvcyhpLCBqKTtcbiAgICAgICAgICAgICAgICBpZiAoZ2FtZS5pc0NlbGxFbXB0eShwb3MpKSBjb250aW51ZTtcbiAgICAgICAgICAgICAgICBpZiAoZ2FtZS5jaGVja0Zvcldpbihwb3MpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBnYW1lLmdldENlbGwocG9zKSA9PSB0aGlzLmdldFN5bWJvbCgpID8gMTAgLSBkZXB0aCA6IGRlcHRoIC0gMTA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiAwOyAvLyBTaG91bGQgbmV2ZXIgcmVhY2ggaGVyZVxuICAgIH1cbiAgICBcbiAgICBwcml2YXRlIGludCBmaW5kQmVzdE1heGltaXppbmdNb3ZlKEdhbWUgZ2FtZSwgaW50IGRlcHRoKSB7XG4gICAgICAgIGludCBtYXhTY29yZSA9IEludGVnZXIuTUlOX1ZBTFVFO1xuICAgICAgICBmb3IgKGludCBpID0gMDsgaSA8IGdhbWUuZ2V0U2l6ZSgpOyBpKyspIHtcbiAgICAgICAgICAgIGZvciAoaW50IGogPSAwOyBqIDwgZ2FtZS5nZXRTaXplKCk7IGorKykge1xuICAgICAgICAgICAgICAgIENlbGxQb3MgcG9zID0gbmV3IENlbGxQb3MoaSwgaik7XG4gICAgICAgICAgICAgICAgaWYgKCFnYW1lLmlzQ2VsbEVtcHR5KHBvcykpIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIEdhbWUgY29weSA9IGdhbWUuY29weSgpO1xuICAgICAgICAgICAgICAgIGNvcHkuc2V0Q2VsbChwb3MsIHRoaXMuZ2V0U3ltYm9sKCkpO1xuICAgICAgICAgICAgICAgIGludCBzY29yZSA9IG1pbmlNYXgoY29weSwgZGVwdGggKyAxLCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgbWF4U2NvcmUgPSBNYXRoLm1heChtYXhTY29yZSwgc2NvcmUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBtYXhTY29yZTtcbiAgICB9XG4gICAgXG4gICAgcHJpdmF0ZSBpbnQgZmluZEJlc3RNaW5pbWl6aW5nTW92ZShHYW1lIGdhbWUsIGludCBkZXB0aCkge1xuICAgICAgICBpbnQgbWluU2NvcmUgPSBJbnRlZ2VyLk1BWF9WQUxVRTtcbiAgICAgICAgZm9yIChpbnQgaSA9IDA7IGkgPCBnYW1lLmdldFNpemUoKTsgaSsrKSB7XG4gICAgICAgICAgICBmb3IgKGludCBqID0gMDsgaiA8IGdhbWUuZ2V0U2l6ZSgpOyBqKyspIHtcbiAgICAgICAgICAgICAgICBDZWxsUG9zIHBvcyA9IG5ldyBDZWxsUG9zKGksIGopO1xuICAgICAgICAgICAgICAgIGlmICghZ2FtZS5pc0NlbGxFbXB0eShwb3MpKSBjb250aW51ZTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBHYW1lIGNvcHkgPSBnYW1lLmNvcHkoKTtcbiAgICAgICAgICAgICAgICBjb3B5LnNldENlbGwocG9zLCB0aGlzLmdldE9wcG9uZW50U3ltYm9sKCkpO1xuICAgICAgICAgICAgICAgIGludCBzY29yZSA9IG1pbmlNYXgoY29weSwgZGVwdGggKyAxLCB0cnVlKTtcbiAgICAgICAgICAgICAgICBtaW5TY29yZSA9IE1hdGgubWluKG1pblNjb3JlLCBzY29yZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG1pblNjb3JlO1xuICAgIH1cbmBgYFxuPC9hdWdtZW50X2NvZGVfc25pcHBldD5cblxuS2V5IGltcHJvdmVtZW50czpcbjEuIEV4dHJhY3RlZCBtZXRob2RzIGZvciBiZXR0ZXIgcmVhZGFiaWxpdHkgYW5kIG1haW50YWluYWJpbGl0eVxuMi4gU2VwYXJhdGVkIHRoZSB3aW4tY2hlY2tpbmcgbG9naWMgaW50byBkZWRpY2F0ZWQgbWV0aG9kc1xuMy4gRGl2aWRlZCB0aGUgYWxnb3JpdGhtIGludG8gbG9naWNhbCBjb21wb25lbnRzXG40LiBNYWludGFpbmVkIHRoZSBzYW1lIGZ1bmN0aW9uYWxpdHkgd2hpbGUgbWFraW5nIHRoZSBjb2RlIG1vcmUgbW9kdWxhclxuNS4gRWFjaCBtZXRob2Qgbm93IGhhcyBhIHNpbmdsZSByZXNwb25zaWJpbGl0eVxuXG5UaGlzIHJlZmFjdG9yaW5nIG1ha2VzIHRoZSBjb2RlIGVhc2llciB0byB1bmRlcnN0YW5kLCBkZWJ1ZywgYW5kIG1vZGlmeSBpbiB0aGUgZnV0dXJlLlxuIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiJzcmMvUGxheWVyL0FJUGxheWVyLmphdmE6MC0zODdcbnNyYy9QbGF5ZXIvQUlQbGF5ZXIuamF2YTozODctMTE0Nlxuc3JjL1BsYXllci9BSVBsYXllci5qYXZhOjExNDYtMTg1Nlxuc3JjL1BsYXllci9BSVBsYXllci5qYXZhOjE4NTYtMjU2M1xuc3JjL1BsYXllci9QbGF5ZXIuamF2YTowLTYzN1xuc3JjL0dhbWUvR2FtZS5qYXZhOjAtNTUxXG5zcmMvR2FtZS9HYW1lLmphdmE6NTUxLTE1MDJcbnNyYy9HYW1lL0dhbWUuamF2YToxNTAyLTE5OTZcbnNyYy9HYW1lL0dhbWUuamF2YToxOTk2LTMwNzJcbnNyYy9HYW1lL0dhbWUuamF2YTozMDcyLTM3NzFcbnNyYy9NYWluLmphdmE6MC01OTlcbnNyYy9NYWluLmphdmE6NTk5LTEyMDdcbnNyYy9NYWluLmphdmE6MTIwNy0xNzU2XG5zcmMvUGxheWVyL0h1bWFuUGxheWVyLmphdmE6MC04MDlcbnNyYy9QbGF5ZXIvSHVtYW5QbGF5ZXIuamF2YTo4MDktMTcxMlxuc3JjL1V0aWxzL0lucHV0LmphdmE6MC05MzhcbnNyYy9VdGlscy9JbnB1dC5qYXZhOjkzOC0xNTYwXG5zcmMvR2FtZS9DZWxsUG9zLmphdmE6MC0xNzQifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwicmVzcG9uc2VfdGV4dCI6IkhlcmUncyBhIHJlZmFjdG9yZWQgdmVyc2lvbiBvZiB0aGUgbWluaW1heCBhbGdvcml0aG0gdGhhdCdzIG1vcmUgZWZmaWNpZW50IGFuZCByZWFkYWJsZTpcblxuYGBgYGphdmEgcGF0aD1zcmMvUGxheWVyL0FJUGxheWVyLmphdmEgbW9kZT1FRElUXG4gICAgcHJpdmF0ZSBpbnQgbWluaU1heChHYW1lIGdhbWUsIGludCBkZXB0aCwgYm9vbGVhbiBpc01heGltaXppbmcpIHtcbiAgICAgICAgLy8gQ2hlY2sgZm9yIHRlcm1pbmFsIHN0YXRlc1xuICAgICAgICBpZiAoY2hlY2tXaW5TdGF0ZShnYW1lKSkge1xuICAgICAgICAgICAgcmV0dXJuIGV2YWx1YXRlV2luU3RhdGUoZ2FtZSwgZGVwdGgpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChnYW1lLmlzRHJhdygpKSByZXR1cm4gMDtcbiAgICAgICAgXG4gICAgICAgIC8vIFJlY3Vyc2l2ZSBjYXNlXG4gICAgICAgIGlmIChpc01heGltaXppbmcpIHtcbiAgICAgICAgICAgIHJldHVybiBmaW5kQmVzdE1heGltaXppbmdNb3ZlKGdhbWUsIGRlcHRoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBmaW5kQmVzdE1pbmltaXppbmdNb3ZlKGdhbWUsIGRlcHRoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICBwcml2YXRlIGJvb2xlYW4gY2hlY2tXaW5TdGF0ZShHYW1lIGdhbWUpIHtcbiAgICAgICAgZm9yIChpbnQgaSA9IDA7IGkgPCBnYW1lLmdldFNpemUoKTsgaSsrKSB7XG4gICAgICAgICAgICBmb3IgKGludCBqID0gMDsgaiA8IGdhbWUuZ2V0U2l6ZSgpOyBqKyspIHtcbiAgICAgICAgICAgICAgICBDZWxsUG9zIHBvcyA9IG5ldyBDZWxsUG9zKGksIGopO1xuICAgICAgICAgICAgICAgIGlmIChnYW1lLmlzQ2VsbEVtcHR5KHBvcykpIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIGlmIChnYW1lLmNoZWNrRm9yV2luKHBvcykpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgXG4gICAgcHJpdmF0ZSBpbnQgZXZhbHVhdGVXaW5TdGF0ZShHYW1lIGdhbWUsIGludCBkZXB0aCkge1xuICAgICAgICBmb3IgKGludCBpID0gMDsgaSA8IGdhbWUuZ2V0U2l6ZSgpOyBpKyspIHtcbiAgICAgICAgICAgIGZvciAoaW50IGogPSAwOyBqIDwgZ2FtZS5nZXRTaXplKCk7IGorKykge1xuICAgICAgICAgICAgICAgIENlbGxQb3MgcG9zID0gbmV3IENlbGxQb3MoaSwgaik7XG4gICAgICAgICAgICAgICAgaWYgKGdhbWUuaXNDZWxsRW1wdHkocG9zKSkgY29udGludWU7XG4gICAgICAgICAgICAgICAgaWYgKGdhbWUuY2hlY2tGb3JXaW4ocG9zKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZ2FtZS5nZXRDZWxsKHBvcykgPT0gdGhpcy5nZXRTeW1ib2woKSA/IDEwIC0gZGVwdGggOiBkZXB0aCAtIDEwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gMDsgLy8gU2hvdWxkIG5ldmVyIHJlYWNoIGhlcmVcbiAgICB9XG4gICAgXG4gICAgcHJpdmF0ZSBpbnQgZmluZEJlc3RNYXhpbWl6aW5nTW92ZShHYW1lIGdhbWUsIGludCBkZXB0aCkge1xuICAgICAgICBpbnQgbWF4U2NvcmUgPSBJbnRlZ2VyLk1JTl9WQUxVRTtcbiAgICAgICAgZm9yIChpbnQgaSA9IDA7IGkgPCBnYW1lLmdldFNpemUoKTsgaSsrKSB7XG4gICAgICAgICAgICBmb3IgKGludCBqID0gMDsgaiA8IGdhbWUuZ2V0U2l6ZSgpOyBqKyspIHtcbiAgICAgICAgICAgICAgICBDZWxsUG9zIHBvcyA9IG5ldyBDZWxsUG9zKGksIGopO1xuICAgICAgICAgICAgICAgIGlmICghZ2FtZS5pc0NlbGxFbXB0eShwb3MpKSBjb250aW51ZTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBHYW1lIGNvcHkgPSBnYW1lLmNvcHkoKTtcbiAgICAgICAgICAgICAgICBjb3B5LnNldENlbGwocG9zLCB0aGlzLmdldFN5bWJvbCgpKTtcbiAgICAgICAgICAgICAgICBpbnQgc2NvcmUgPSBtaW5pTWF4KGNvcHksIGRlcHRoICsgMSwgZmFsc2UpO1xuICAgICAgICAgICAgICAgIG1heFNjb3JlID0gTWF0aC5tYXgobWF4U2NvcmUsIHNjb3JlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbWF4U2NvcmU7XG4gICAgfVxuICAgIFxuICAgIHByaXZhdGUgaW50IGZpbmRCZXN0TWluaW1pemluZ01vdmUoR2FtZSBnYW1lLCBpbnQgZGVwdGgpIHtcbiAgICAgICAgaW50IG1pblNjb3JlID0gSW50ZWdlci5NQVhfVkFMVUU7XG4gICAgICAgIGZvciAoaW50IGkgPSAwOyBpIDwgZ2FtZS5nZXRTaXplKCk7IGkrKykge1xuICAgICAgICAgICAgZm9yIChpbnQgaiA9IDA7IGogPCBnYW1lLmdldFNpemUoKTsgaisrKSB7XG4gICAgICAgICAgICAgICAgQ2VsbFBvcyBwb3MgPSBuZXcgQ2VsbFBvcyhpLCBqKTtcbiAgICAgICAgICAgICAgICBpZiAoIWdhbWUuaXNDZWxsRW1wdHkocG9zKSkgY29udGludWU7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgR2FtZSBjb3B5ID0gZ2FtZS5jb3B5KCk7XG4gICAgICAgICAgICAgICAgY29weS5zZXRDZWxsKHBvcywgdGhpcy5nZXRPcHBvbmVudFN5bWJvbCgpKTtcbiAgICAgICAgICAgICAgICBpbnQgc2NvcmUgPSBtaW5pTWF4KGNvcHksIGRlcHRoICsgMSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgbWluU2NvcmUgPSBNYXRoLm1pbihtaW5TY29yZSwgc2NvcmUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBtaW5TY29yZTtcbiAgICB9XG5gYGBgXG5cbktleSBpbXByb3ZlbWVudHM6XG4xLiBFeHRyYWN0ZWQgbWV0aG9kcyBmb3IgYmV0dGVyIHJlYWRhYmlsaXR5IGFuZCBtYWludGFpbmFiaWxpdHlcbjIuIFNlcGFyYXRlZCB0aGUgd2luLWNoZWNraW5nIGxvZ2ljIGludG8gZGVkaWNhdGVkIG1ldGhvZHNcbjMuIERpdmlkZWQgdGhlIGFsZ29yaXRobSBpbnRvIGxvZ2ljYWwgY29tcG9uZW50c1xuNC4gTWFpbnRhaW5lZCB0aGUgc2FtZSBmdW5jdGlvbmFsaXR5IHdoaWxlIG1ha2luZyB0aGUgY29kZSBtb3JlIG1vZHVsYXJcbjUuIEVhY2ggbWV0aG9kIG5vdyBoYXMgYSBzaW5nbGUgcmVzcG9uc2liaWxpdHlcblxuVGhpcyByZWZhY3RvcmluZyBtYWtlcyB0aGUgY29kZSBlYXNpZXIgdG8gdW5kZXJzdGFuZCwgZGVidWcsIGFuZCBtb2RpZnkgaW4gdGhlIGZ1dHVyZS5cbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W3siY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjM4NyIsImJsb2JfbmFtZSI6IjMxMTNmNGJkYzY1OTRkNWFlNTY5MmE3YWNjNWQzMWYwNzRlYTY3NWU2NzUzNWE3ZTc5NzI4MTAwOTNhZmJjNmMiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvUGxheWVyL0FJUGxheWVyLmphdmEifX0seyJjaGFyX3N0YXJ0IjoiMzg3IiwiY2hhcl9lbmQiOiIxMTQ2IiwiYmxvYl9uYW1lIjoiMzExM2Y0YmRjNjU5NGQ1YWU1NjkyYTdhY2M1ZDMxZjA3NGVhNjc1ZTY3NTM1YTdlNzk3MjgxMDA5M2FmYmM2YyIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9QbGF5ZXIvQUlQbGF5ZXIuamF2YSJ9fSx7ImNoYXJfc3RhcnQiOiIxMTQ2IiwiY2hhcl9lbmQiOiIxODU2IiwiYmxvYl9uYW1lIjoiMzExM2Y0YmRjNjU5NGQ1YWU1NjkyYTdhY2M1ZDMxZjA3NGVhNjc1ZTY3NTM1YTdlNzk3MjgxMDA5M2FmYmM2YyIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9QbGF5ZXIvQUlQbGF5ZXIuamF2YSJ9fSx7ImNoYXJfc3RhcnQiOiIxODU2IiwiY2hhcl9lbmQiOiIyNTYzIiwiYmxvYl9uYW1lIjoiMzExM2Y0YmRjNjU5NGQ1YWU1NjkyYTdhY2M1ZDMxZjA3NGVhNjc1ZTY3NTM1YTdlNzk3MjgxMDA5M2FmYmM2YyIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9QbGF5ZXIvQUlQbGF5ZXIuamF2YSJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI2MzciLCJibG9iX25hbWUiOiJhZTg1NTBmMWJlYmVmNjRiNDExYTI5MjlmNThjNjJlMjEyZDc5OTdiN2Q0N2U3YTUyZTU2MTdiY2M4M2Q1YjBlIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL1BsYXllci9QbGF5ZXIuamF2YSJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI1NTEiLCJibG9iX25hbWUiOiI3YjQ5NmMwOWQwODNmZmJkODQzZDZlZTkwMDVmYWFlNTVhMmQ4MGEzYWRkMmVkNzZiNWYxYjYwMjgzYTFlMWQ5IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL0dhbWUvR2FtZS5qYXZhIn19LHsiY2hhcl9zdGFydCI6IjU1MSIsImNoYXJfZW5kIjoiMTUwMiIsImJsb2JfbmFtZSI6IjdiNDk2YzA5ZDA4M2ZmYmQ4NDNkNmVlOTAwNWZhYWU1NWEyZDgwYTNhZGQyZWQ3NmI1ZjFiNjAyODNhMWUxZDkiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvR2FtZS9HYW1lLmphdmEifX0seyJjaGFyX3N0YXJ0IjoiMTUwMiIsImNoYXJfZW5kIjoiMTk5NiIsImJsb2JfbmFtZSI6IjdiNDk2YzA5ZDA4M2ZmYmQ4NDNkNmVlOTAwNWZhYWU1NWEyZDgwYTNhZGQyZWQ3NmI1ZjFiNjAyODNhMWUxZDkiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvR2FtZS9HYW1lLmphdmEifX0seyJjaGFyX3N0YXJ0IjoiMTk5NiIsImNoYXJfZW5kIjoiMzA3MiIsImJsb2JfbmFtZSI6IjdiNDk2YzA5ZDA4M2ZmYmQ4NDNkNmVlOTAwNWZhYWU1NWEyZDgwYTNhZGQyZWQ3NmI1ZjFiNjAyODNhMWUxZDkiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvR2FtZS9HYW1lLmphdmEifX0seyJjaGFyX3N0YXJ0IjoiMzA3MiIsImNoYXJfZW5kIjoiMzc3MSIsImJsb2JfbmFtZSI6IjdiNDk2YzA5ZDA4M2ZmYmQ4NDNkNmVlOTAwNWZhYWU1NWEyZDgwYTNhZGQyZWQ3NmI1ZjFiNjAyODNhMWUxZDkiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvR2FtZS9HYW1lLmphdmEifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNTk5IiwiYmxvYl9uYW1lIjoiZWMxYjk0ZmQ4MTYxNGNjNmY5NjM2NWI1ZTY0ZWYxOTNhMDYxNjNkOGFkNTQxNjJjMThjNDkxNGRhODNlMmNiNSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9NYWluLmphdmEifX0seyJjaGFyX3N0YXJ0IjoiNTk5IiwiY2hhcl9lbmQiOiIxMjA3IiwiYmxvYl9uYW1lIjoiZWMxYjk0ZmQ4MTYxNGNjNmY5NjM2NWI1ZTY0ZWYxOTNhMDYxNjNkOGFkNTQxNjJjMThjNDkxNGRhODNlMmNiNSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9NYWluLmphdmEifX0seyJjaGFyX3N0YXJ0IjoiMTIwNyIsImNoYXJfZW5kIjoiMTc1NiIsImJsb2JfbmFtZSI6ImVjMWI5NGZkODE2MTRjYzZmOTYzNjViNWU2NGVmMTkzYTA2MTYzZDhhZDU0MTYyYzE4YzQ5MTRkYTgzZTJjYjUiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvTWFpbi5qYXZhIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjgwOSIsImJsb2JfbmFtZSI6IjE1NmNlZGQ2MGQ3ZDNkNzU2ZWM1NjZiNjI1NmMxNDU5NzVmNjhlYWY0ZmYxZjEzMmMwNDIxODgwYmMyMGYzZTQiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvUGxheWVyL0h1bWFuUGxheWVyLmphdmEifX0seyJjaGFyX3N0YXJ0IjoiODA5IiwiY2hhcl9lbmQiOiIxNzEyIiwiYmxvYl9uYW1lIjoiMTU2Y2VkZDYwZDdkM2Q3NTZlYzU2NmI2MjU2YzE0NTk3NWY2OGVhZjRmZjFmMTMyYzA0MjE4ODBiYzIwZjNlNCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9QbGF5ZXIvSHVtYW5QbGF5ZXIuamF2YSJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI5MzgiLCJibG9iX25hbWUiOiJkMzg0NjkwZDY1ZGViNjE5NzA2NWVmZWMyZjNhNjkyYTUxNjU3M2ZmZjFiZTE1Njc5YjM2NWMyM2IyNjNiMTFmIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL1V0aWxzL0lucHV0LmphdmEifX0seyJjaGFyX3N0YXJ0IjoiOTM4IiwiY2hhcl9lbmQiOiIxNTYwIiwiYmxvYl9uYW1lIjoiZDM4NDY5MGQ2NWRlYjYxOTcwNjVlZmVjMmYzYTY5MmE1MTY1NzNmZmYxYmUxNTY3OWIzNjVjMjNiMjYzYjExZiIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9VdGlscy9JbnB1dC5qYXZhIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjE3NCIsImJsb2JfbmFtZSI6ImM3MTE3NjRjZGJkNzVkMTUyM2E2NDM4NzQ0YjkxZWFkZTJmYjhmMTViOWZkZmZhYzUzNjdlMjdhMzE1NTA3OGUiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvR2FtZS9DZWxsUG9zLmphdmEifX1dfSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiNjczNWY5NzktMGNjNi00N2RhLWFjMzYtYWZlMWM1ZGI0YWM1IiwicmVxdWVzdF9tZXNzYWdlIjoicmVkdWNlIGR1cGxpY2F0aW9uIiwicmljaF90ZXh0X2pzb25fcmVwciI6eyJ0eXBlIjoiZG9jIiwiY29udGVudCI6W3sidHlwZSI6InBhcmFncmFwaCIsImNvbnRlbnQiOlt7InR5cGUiOiJ0ZXh0IiwidGV4dCI6InJlZHVjZSBkdXBsaWNhdGlvbiJ9XX1dfSwibWVudGlvbmVkX2l0ZW1zIjpbXSwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50IjoiSGVyZSdzIGEgdmVyc2lvbiB3aXRoIHJlZHVjZWQgZHVwbGljYXRpb246XG5cbjxhdWdtZW50X2NvZGVfc25pcHBldCBwYXRoPVwic3JjL1BsYXllci9BSVBsYXllci5qYXZhXCIgbW9kZT1cIkVESVRcIj5cbmBgYGphdmFcbiAgICBAT3ZlcnJpZGVcbiAgICBwdWJsaWMgQ2VsbFBvcyBtYWtlTW92ZShHYW1lIGdhbWUpIHtcbiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKFwiQUkgaXMgbWFraW5nIGEgbW92ZS4uLlwiKTtcbiAgICAgICAgcmV0dXJuIGZpbmRCZXN0TW92ZShnYW1lLCB0aGlzLmdldFN5bWJvbCgpKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIENlbGxQb3MgZmluZEJlc3RNb3ZlKEdhbWUgZ2FtZSwgY2hhciBzeW1ib2wpIHtcbiAgICAgICAgQ2VsbFBvcyBiZXN0TW92ZSA9IG51bGw7XG4gICAgICAgIGludCBiZXN0U2NvcmUgPSBJbnRlZ2VyLk1JTl9WQUxVRTtcbiAgICAgICAgXG4gICAgICAgIGZvciAoQ2VsbFBvcyBwb3MgOiBnZXRFbXB0eUNlbGxzKGdhbWUpKSB7XG4gICAgICAgICAgICBHYW1lIGNvcHkgPSBnYW1lLmNvcHkoKTtcbiAgICAgICAgICAgIGNvcHkuc2V0Q2VsbChwb3MsIHN5bWJvbCk7XG4gICAgICAgICAgICBpbnQgc2NvcmUgPSBtaW5pTWF4KGNvcHksIDAsIGZhbHNlKTtcbiAgICAgICAgICAgIGlmIChzY29yZSA+IGJlc3RTY29yZSkge1xuICAgICAgICAgICAgICAgIGJlc3RTY29yZSA9IHNjb3JlO1xuICAgICAgICAgICAgICAgIGJlc3RNb3ZlID0gcG9zO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBiZXN0TW92ZTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGludCBtaW5pTWF4KEdhbWUgZ2FtZSwgaW50IGRlcHRoLCBib29sZWFuIGlzTWF4aW1pemluZykge1xuICAgICAgICAvLyBDaGVjayBmb3IgdGVybWluYWwgc3RhdGVzXG4gICAgICAgIGlmIChpc1Rlcm1pbmFsU3RhdGUoZ2FtZSkpIHtcbiAgICAgICAgICAgIHJldHVybiBldmFsdWF0ZUJvYXJkKGdhbWUsIGRlcHRoKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLy8gUmVjdXJzaXZlIGNhc2VcbiAgICAgICAgY2hhciBzeW1ib2wgPSBpc01heGltaXppbmcgPyB0aGlzLmdldFN5bWJvbCgpIDogdGhpcy5nZXRPcHBvbmVudFN5bWJvbCgpO1xuICAgICAgICBpbnQgYmVzdFNjb3JlID0gaXNNYXhpbWl6aW5nID8gSW50ZWdlci5NSU5fVkFMVUUgOiBJbnRlZ2VyLk1BWF9WQUxVRTtcbiAgICAgICAgXG4gICAgICAgIGZvciAoQ2VsbFBvcyBwb3MgOiBnZXRFbXB0eUNlbGxzKGdhbWUpKSB7XG4gICAgICAgICAgICBHYW1lIGNvcHkgPSBnYW1lLmNvcHkoKTtcbiAgICAgICAgICAgIGNvcHkuc2V0Q2VsbChwb3MsIHN5bWJvbCk7XG4gICAgICAgICAgICBpbnQgc2NvcmUgPSBtaW5pTWF4KGNvcHksIGRlcHRoICsgMSwgIWlzTWF4aW1pemluZyk7XG4gICAgICAgICAgICBiZXN0U2NvcmUgPSBpc01heGltaXppbmcgPyBcbiAgICAgICAgICAgICAgICBNYXRoLm1heChiZXN0U2NvcmUsIHNjb3JlKSA6IFxuICAgICAgICAgICAgICAgIE1hdGgubWluKGJlc3RTY29yZSwgc2NvcmUpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBiZXN0U2NvcmU7XG4gICAgfVxuICAgIFxuICAgIHByaXZhdGUgYm9vbGVhbiBpc1Rlcm1pbmFsU3RhdGUoR2FtZSBnYW1lKSB7XG4gICAgICAgIHJldHVybiBoYXNXaW5uZXIoZ2FtZSkgfHwgZ2FtZS5pc0RyYXcoKTtcbiAgICB9XG4gICAgXG4gICAgcHJpdmF0ZSBib29sZWFuIGhhc1dpbm5lcihHYW1lIGdhbWUpIHtcbiAgICAgICAgZm9yIChpbnQgaSA9IDA7IGkgPCBnYW1lLmdldFNpemUoKTsgaSsrKSB7XG4gICAgICAgICAgICBmb3IgKGludCBqID0gMDsgaiA8IGdhbWUuZ2V0U2l6ZSgpOyBqKyspIHtcbiAgICAgICAgICAgICAgICBDZWxsUG9zIHBvcyA9IG5ldyBDZWxsUG9zKGksIGopO1xuICAgICAgICAgICAgICAgIGlmIChnYW1lLmlzQ2VsbEVtcHR5KHBvcykpIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIGlmIChnYW1lLmNoZWNrRm9yV2luKHBvcykpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgXG4gICAgcHJpdmF0ZSBpbnQgZXZhbHVhdGVCb2FyZChHYW1lIGdhbWUsIGludCBkZXB0aCkge1xuICAgICAgICAvLyBDaGVjayBmb3Igd2luXG4gICAgICAgIGZvciAoaW50IGkgPSAwOyBpIDwgZ2FtZS5nZXRTaXplKCk7IGkrKykge1xuICAgICAgICAgICAgZm9yIChpbnQgaiA9IDA7IGogPCBnYW1lLmdldFNpemUoKTsgaisrKSB7XG4gICAgICAgICAgICAgICAgQ2VsbFBvcyBwb3MgPSBuZXcgQ2VsbFBvcyhpLCBqKTtcbiAgICAgICAgICAgICAgICBpZiAoZ2FtZS5pc0NlbGxFbXB0eShwb3MpKSBjb250aW51ZTtcbiAgICAgICAgICAgICAgICBpZiAoZ2FtZS5jaGVja0Zvcldpbihwb3MpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNoYXIgd2lubmluZ1N5bWJvbCA9IGdhbWUuZ2V0Q2VsbChwb3MpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gd2lubmluZ1N5bWJvbCA9PSB0aGlzLmdldFN5bWJvbCgpID8gXG4gICAgICAgICAgICAgICAgICAgICAgICAxMCAtIGRlcHRoIDogZGVwdGggLSAxMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy8gRHJhd1xuICAgICAgICByZXR1cm4gMDtcbiAgICB9XG4gICAgXG4gICAgcHJpdmF0ZSBJdGVyYWJsZTxDZWxsUG9zPiBnZXRFbXB0eUNlbGxzKEdhbWUgZ2FtZSkge1xuICAgICAgICBqYXZhLnV0aWwuTGlzdDxDZWxsUG9zPiBlbXB0eUNlbGxzID0gbmV3IGphdmEudXRpbC5BcnJheUxpc3Q8PigpO1xuICAgICAgICBmb3IgKGludCBpID0gMDsgaSA8IGdhbWUuZ2V0U2l6ZSgpOyBpKyspIHtcbiAgICAgICAgICAgIGZvciAoaW50IGogPSAwOyBqIDwgZ2FtZS5nZXRTaXplKCk7IGorKykge1xuICAgICAgICAgICAgICAgIENlbGxQb3MgcG9zID0gbmV3IENlbGxQb3MoaSwgaik7XG4gICAgICAgICAgICAgICAgaWYgKGdhbWUuaXNDZWxsRW1wdHkocG9zKSkge1xuICAgICAgICAgICAgICAgICAgICBlbXB0eUNlbGxzLmFkZChwb3MpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZW1wdHlDZWxscztcbiAgICB9XG5gYGBcbjwvYXVnbWVudF9jb2RlX3NuaXBwZXQ+XG5cbktleSBpbXByb3ZlbWVudHM6XG4xLiBDcmVhdGVkIGBnZXRFbXB0eUNlbGxzYCBtZXRob2QgdG8gYXZvaWQgZHVwbGljYXRpbmcgdGhlIG5lc3RlZCBsb29wcyBmb3IgZmluZGluZyBlbXB0eSBjZWxsc1xuMi4gQ29tYmluZWQgdGhlIG1heGltaXppbmcgYW5kIG1pbmltaXppbmcgbG9naWMgaW4gYG1pbmlNYXhgIHVzaW5nIGNvbmRpdGlvbmFsIG9wZXJhdG9yc1xuMy4gRXh0cmFjdGVkIGBpc1Rlcm1pbmFsU3RhdGVgIGFuZCBgaGFzV2lubmVyYCBtZXRob2RzIGZvciBiZXR0ZXIgcmVhZGFiaWxpdHlcbjQuIFNpbXBsaWZpZWQgdGhlIGV2YWx1YXRpb24gbG9naWMgaW4gYSBzaW5nbGUgbWV0aG9kXG41LiBSZW1vdmVkIGR1cGxpY2F0ZSBjb2RlIGZvciBib2FyZCB0cmF2ZXJzYWwgYW5kIG1vdmUgZ2VuZXJhdGlvblxuNi4gQWRkZWQgYSBoZWxwZXIgbWV0aG9kIGBmaW5kQmVzdE1vdmVgIHRoYXQgY291bGQgYmUgcmV1c2VkIGZvciBkaWZmZXJlbnQgc3ltYm9sc1xuXG5Ob3RlOiBUaGUgY29kZSBhc3N1bWVzIHRoZXJlJ3MgYSBgZ2V0Q2VsbChDZWxsUG9zKWAgbWV0aG9kIGluIHRoZSBHYW1lIGNsYXNzLiBJZiBpdCBkb2Vzbid0IGV4aXN0LCB5b3UnbGwgbmVlZCB0byBhZGQgaXQgb3IgbW9kaWZ5IHRoZSBjb2RlIHRvIGFjY2VzcyB0aGUgY2VsbCB2YWx1ZSBkaWZmZXJlbnRseS5cbiJ9LHsiaWQiOjIsInR5cGUiOjIsImNvbnRlbnQiOiIifSx7ImlkIjozLCJ0eXBlIjozLCJjb250ZW50Ijoic3JjL1BsYXllci9BSVBsYXllci5qYXZhOjAtMzg3XG5zcmMvUGxheWVyL0FJUGxheWVyLmphdmE6Mzg3LTExNDZcbnNyYy9QbGF5ZXIvQUlQbGF5ZXIuamF2YToxMTQ2LTE4NTZcbnNyYy9QbGF5ZXIvQUlQbGF5ZXIuamF2YToxODU2LTI1NjNcbnNyYy9HYW1lL0dhbWUuamF2YTowLTU1MVxuc3JjL0dhbWUvR2FtZS5qYXZhOjU1MS0xNTAyXG5zcmMvR2FtZS9HYW1lLmphdmE6MTUwMi0xOTk2XG5zcmMvR2FtZS9HYW1lLmphdmE6MTk5Ni0zMDcyXG5zcmMvR2FtZS9HYW1lLmphdmE6MzA3Mi0zNzcxXG5zcmMvTWFpbi5qYXZhOjAtNTk5XG5zcmMvTWFpbi5qYXZhOjU5OS0xMjA3XG5zcmMvTWFpbi5qYXZhOjEyMDctMTc1Nlxuc3JjL1BsYXllci9QbGF5ZXIuamF2YTowLTYzN1xuc3JjL1BsYXllci9IdW1hblBsYXllci5qYXZhOjAtODA5XG5zcmMvUGxheWVyL0h1bWFuUGxheWVyLmphdmE6ODA5LTE3MTJcbnNyYy9VdGlscy9JbnB1dC5qYXZhOjAtOTM4XG5zcmMvVXRpbHMvSW5wdXQuamF2YTo5MzgtMTU2MFxuc3JjL0dhbWUvQ2VsbFBvcy5qYXZhOjAtMTc0In1dLCJzZWVuX3N0YXRlIjoic2VlbiIsInJlc3BvbnNlX3RleHQiOiJIZXJlJ3MgYSB2ZXJzaW9uIHdpdGggcmVkdWNlZCBkdXBsaWNhdGlvbjpcblxuYGBgYGphdmEgcGF0aD1zcmMvUGxheWVyL0FJUGxheWVyLmphdmEgbW9kZT1FRElUXG4gICAgQE92ZXJyaWRlXG4gICAgcHVibGljIENlbGxQb3MgbWFrZU1vdmUoR2FtZSBnYW1lKSB7XG4gICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihcIkFJIGlzIG1ha2luZyBhIG1vdmUuLi5cIik7XG4gICAgICAgIHJldHVybiBmaW5kQmVzdE1vdmUoZ2FtZSwgdGhpcy5nZXRTeW1ib2woKSk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBDZWxsUG9zIGZpbmRCZXN0TW92ZShHYW1lIGdhbWUsIGNoYXIgc3ltYm9sKSB7XG4gICAgICAgIENlbGxQb3MgYmVzdE1vdmUgPSBudWxsO1xuICAgICAgICBpbnQgYmVzdFNjb3JlID0gSW50ZWdlci5NSU5fVkFMVUU7XG4gICAgICAgIFxuICAgICAgICBmb3IgKENlbGxQb3MgcG9zIDogZ2V0RW1wdHlDZWxscyhnYW1lKSkge1xuICAgICAgICAgICAgR2FtZSBjb3B5ID0gZ2FtZS5jb3B5KCk7XG4gICAgICAgICAgICBjb3B5LnNldENlbGwocG9zLCBzeW1ib2wpO1xuICAgICAgICAgICAgaW50IHNjb3JlID0gbWluaU1heChjb3B5LCAwLCBmYWxzZSk7XG4gICAgICAgICAgICBpZiAoc2NvcmUgPiBiZXN0U2NvcmUpIHtcbiAgICAgICAgICAgICAgICBiZXN0U2NvcmUgPSBzY29yZTtcbiAgICAgICAgICAgICAgICBiZXN0TW92ZSA9IHBvcztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYmVzdE1vdmU7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBpbnQgbWluaU1heChHYW1lIGdhbWUsIGludCBkZXB0aCwgYm9vbGVhbiBpc01heGltaXppbmcpIHtcbiAgICAgICAgLy8gQ2hlY2sgZm9yIHRlcm1pbmFsIHN0YXRlc1xuICAgICAgICBpZiAoaXNUZXJtaW5hbFN0YXRlKGdhbWUpKSB7XG4gICAgICAgICAgICByZXR1cm4gZXZhbHVhdGVCb2FyZChnYW1lLCBkZXB0aCk7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC8vIFJlY3Vyc2l2ZSBjYXNlXG4gICAgICAgIGNoYXIgc3ltYm9sID0gaXNNYXhpbWl6aW5nID8gdGhpcy5nZXRTeW1ib2woKSA6IHRoaXMuZ2V0T3Bwb25lbnRTeW1ib2woKTtcbiAgICAgICAgaW50IGJlc3RTY29yZSA9IGlzTWF4aW1pemluZyA/IEludGVnZXIuTUlOX1ZBTFVFIDogSW50ZWdlci5NQVhfVkFMVUU7XG4gICAgICAgIFxuICAgICAgICBmb3IgKENlbGxQb3MgcG9zIDogZ2V0RW1wdHlDZWxscyhnYW1lKSkge1xuICAgICAgICAgICAgR2FtZSBjb3B5ID0gZ2FtZS5jb3B5KCk7XG4gICAgICAgICAgICBjb3B5LnNldENlbGwocG9zLCBzeW1ib2wpO1xuICAgICAgICAgICAgaW50IHNjb3JlID0gbWluaU1heChjb3B5LCBkZXB0aCArIDEsICFpc01heGltaXppbmcpO1xuICAgICAgICAgICAgYmVzdFNjb3JlID0gaXNNYXhpbWl6aW5nID8gXG4gICAgICAgICAgICAgICAgTWF0aC5tYXgoYmVzdFNjb3JlLCBzY29yZSkgOiBcbiAgICAgICAgICAgICAgICBNYXRoLm1pbihiZXN0U2NvcmUsIHNjb3JlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYmVzdFNjb3JlO1xuICAgIH1cbiAgICBcbiAgICBwcml2YXRlIGJvb2xlYW4gaXNUZXJtaW5hbFN0YXRlKEdhbWUgZ2FtZSkge1xuICAgICAgICByZXR1cm4gaGFzV2lubmVyKGdhbWUpIHx8IGdhbWUuaXNEcmF3KCk7XG4gICAgfVxuICAgIFxuICAgIHByaXZhdGUgYm9vbGVhbiBoYXNXaW5uZXIoR2FtZSBnYW1lKSB7XG4gICAgICAgIGZvciAoaW50IGkgPSAwOyBpIDwgZ2FtZS5nZXRTaXplKCk7IGkrKykge1xuICAgICAgICAgICAgZm9yIChpbnQgaiA9IDA7IGogPCBnYW1lLmdldFNpemUoKTsgaisrKSB7XG4gICAgICAgICAgICAgICAgQ2VsbFBvcyBwb3MgPSBuZXcgQ2VsbFBvcyhpLCBqKTtcbiAgICAgICAgICAgICAgICBpZiAoZ2FtZS5pc0NlbGxFbXB0eShwb3MpKSBjb250aW51ZTtcbiAgICAgICAgICAgICAgICBpZiAoZ2FtZS5jaGVja0Zvcldpbihwb3MpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIFxuICAgIHByaXZhdGUgaW50IGV2YWx1YXRlQm9hcmQoR2FtZSBnYW1lLCBpbnQgZGVwdGgpIHtcbiAgICAgICAgLy8gQ2hlY2sgZm9yIHdpblxuICAgICAgICBmb3IgKGludCBpID0gMDsgaSA8IGdhbWUuZ2V0U2l6ZSgpOyBpKyspIHtcbiAgICAgICAgICAgIGZvciAoaW50IGogPSAwOyBqIDwgZ2FtZS5nZXRTaXplKCk7IGorKykge1xuICAgICAgICAgICAgICAgIENlbGxQb3MgcG9zID0gbmV3IENlbGxQb3MoaSwgaik7XG4gICAgICAgICAgICAgICAgaWYgKGdhbWUuaXNDZWxsRW1wdHkocG9zKSkgY29udGludWU7XG4gICAgICAgICAgICAgICAgaWYgKGdhbWUuY2hlY2tGb3JXaW4ocG9zKSkge1xuICAgICAgICAgICAgICAgICAgICBjaGFyIHdpbm5pbmdTeW1ib2wgPSBnYW1lLmdldENlbGwocG9zKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHdpbm5pbmdTeW1ib2wgPT0gdGhpcy5nZXRTeW1ib2woKSA/IFxuICAgICAgICAgICAgICAgICAgICAgICAgMTAgLSBkZXB0aCA6IGRlcHRoIC0gMTA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8vIERyYXdcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgfVxuICAgIFxuICAgIHByaXZhdGUgSXRlcmFibGU8Q2VsbFBvcz4gZ2V0RW1wdHlDZWxscyhHYW1lIGdhbWUpIHtcbiAgICAgICAgamF2YS51dGlsLkxpc3Q8Q2VsbFBvcz4gZW1wdHlDZWxscyA9IG5ldyBqYXZhLnV0aWwuQXJyYXlMaXN0PD4oKTtcbiAgICAgICAgZm9yIChpbnQgaSA9IDA7IGkgPCBnYW1lLmdldFNpemUoKTsgaSsrKSB7XG4gICAgICAgICAgICBmb3IgKGludCBqID0gMDsgaiA8IGdhbWUuZ2V0U2l6ZSgpOyBqKyspIHtcbiAgICAgICAgICAgICAgICBDZWxsUG9zIHBvcyA9IG5ldyBDZWxsUG9zKGksIGopO1xuICAgICAgICAgICAgICAgIGlmIChnYW1lLmlzQ2VsbEVtcHR5KHBvcykpIHtcbiAgICAgICAgICAgICAgICAgICAgZW1wdHlDZWxscy5hZGQocG9zKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGVtcHR5Q2VsbHM7XG4gICAgfVxuYGBgYFxuXG5LZXkgaW1wcm92ZW1lbnRzOlxuMS4gQ3JlYXRlZCBgZ2V0RW1wdHlDZWxsc2AgbWV0aG9kIHRvIGF2b2lkIGR1cGxpY2F0aW5nIHRoZSBuZXN0ZWQgbG9vcHMgZm9yIGZpbmRpbmcgZW1wdHkgY2VsbHNcbjIuIENvbWJpbmVkIHRoZSBtYXhpbWl6aW5nIGFuZCBtaW5pbWl6aW5nIGxvZ2ljIGluIGBtaW5pTWF4YCB1c2luZyBjb25kaXRpb25hbCBvcGVyYXRvcnNcbjMuIEV4dHJhY3RlZCBgaXNUZXJtaW5hbFN0YXRlYCBhbmQgYGhhc1dpbm5lcmAgbWV0aG9kcyBmb3IgYmV0dGVyIHJlYWRhYmlsaXR5XG40LiBTaW1wbGlmaWVkIHRoZSBldmFsdWF0aW9uIGxvZ2ljIGluIGEgc2luZ2xlIG1ldGhvZFxuNS4gUmVtb3ZlZCBkdXBsaWNhdGUgY29kZSBmb3IgYm9hcmQgdHJhdmVyc2FsIGFuZCBtb3ZlIGdlbmVyYXRpb25cbjYuIEFkZGVkIGEgaGVscGVyIG1ldGhvZCBgZmluZEJlc3RNb3ZlYCB0aGF0IGNvdWxkIGJlIHJldXNlZCBmb3IgZGlmZmVyZW50IHN5bWJvbHNcblxuTm90ZTogVGhlIGNvZGUgYXNzdW1lcyB0aGVyZSdzIGEgYGdldENlbGwoQ2VsbFBvcylgIG1ldGhvZCBpbiB0aGUgR2FtZSBjbGFzcy4gSWYgaXQgZG9lc24ndCBleGlzdCwgeW91J2xsIG5lZWQgdG8gYWRkIGl0IG9yIG1vZGlmeSB0aGUgY29kZSB0byBhY2Nlc3MgdGhlIGNlbGwgdmFsdWUgZGlmZmVyZW50bHkuXG4iLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOlt7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiIzODciLCJibG9iX25hbWUiOiIzMTEzZjRiZGM2NTk0ZDVhZTU2OTJhN2FjYzVkMzFmMDc0ZWE2NzVlNjc1MzVhN2U3OTcyODEwMDkzYWZiYzZjIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL1BsYXllci9BSVBsYXllci5qYXZhIn19LHsiY2hhcl9zdGFydCI6IjM4NyIsImNoYXJfZW5kIjoiMTE0NiIsImJsb2JfbmFtZSI6IjMxMTNmNGJkYzY1OTRkNWFlNTY5MmE3YWNjNWQzMWYwNzRlYTY3NWU2NzUzNWE3ZTc5NzI4MTAwOTNhZmJjNmMiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvUGxheWVyL0FJUGxheWVyLmphdmEifX0seyJjaGFyX3N0YXJ0IjoiMTE0NiIsImNoYXJfZW5kIjoiMTg1NiIsImJsb2JfbmFtZSI6IjMxMTNmNGJkYzY1OTRkNWFlNTY5MmE3YWNjNWQzMWYwNzRlYTY3NWU2NzUzNWE3ZTc5NzI4MTAwOTNhZmJjNmMiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvUGxheWVyL0FJUGxheWVyLmphdmEifX0seyJjaGFyX3N0YXJ0IjoiMTg1NiIsImNoYXJfZW5kIjoiMjU2MyIsImJsb2JfbmFtZSI6IjMxMTNmNGJkYzY1OTRkNWFlNTY5MmE3YWNjNWQzMWYwNzRlYTY3NWU2NzUzNWE3ZTc5NzI4MTAwOTNhZmJjNmMiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvUGxheWVyL0FJUGxheWVyLmphdmEifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNTUxIiwiYmxvYl9uYW1lIjoiN2I0OTZjMDlkMDgzZmZiZDg0M2Q2ZWU5MDA1ZmFhZTU1YTJkODBhM2FkZDJlZDc2YjVmMWI2MDI4M2ExZTFkOSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9HYW1lL0dhbWUuamF2YSJ9fSx7ImNoYXJfc3RhcnQiOiI1NTEiLCJjaGFyX2VuZCI6IjE1MDIiLCJibG9iX25hbWUiOiI3YjQ5NmMwOWQwODNmZmJkODQzZDZlZTkwMDVmYWFlNTVhMmQ4MGEzYWRkMmVkNzZiNWYxYjYwMjgzYTFlMWQ5IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL0dhbWUvR2FtZS5qYXZhIn19LHsiY2hhcl9zdGFydCI6IjE1MDIiLCJjaGFyX2VuZCI6IjE5OTYiLCJibG9iX25hbWUiOiI3YjQ5NmMwOWQwODNmZmJkODQzZDZlZTkwMDVmYWFlNTVhMmQ4MGEzYWRkMmVkNzZiNWYxYjYwMjgzYTFlMWQ5IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL0dhbWUvR2FtZS5qYXZhIn19LHsiY2hhcl9zdGFydCI6IjE5OTYiLCJjaGFyX2VuZCI6IjMwNzIiLCJibG9iX25hbWUiOiI3YjQ5NmMwOWQwODNmZmJkODQzZDZlZTkwMDVmYWFlNTVhMmQ4MGEzYWRkMmVkNzZiNWYxYjYwMjgzYTFlMWQ5IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL0dhbWUvR2FtZS5qYXZhIn19LHsiY2hhcl9zdGFydCI6IjMwNzIiLCJjaGFyX2VuZCI6IjM3NzEiLCJibG9iX25hbWUiOiI3YjQ5NmMwOWQwODNmZmJkODQzZDZlZTkwMDVmYWFlNTVhMmQ4MGEzYWRkMmVkNzZiNWYxYjYwMjgzYTFlMWQ5IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL0dhbWUvR2FtZS5qYXZhIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjU5OSIsImJsb2JfbmFtZSI6ImVjMWI5NGZkODE2MTRjYzZmOTYzNjViNWU2NGVmMTkzYTA2MTYzZDhhZDU0MTYyYzE4YzQ5MTRkYTgzZTJjYjUiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvTWFpbi5qYXZhIn19LHsiY2hhcl9zdGFydCI6IjU5OSIsImNoYXJfZW5kIjoiMTIwNyIsImJsb2JfbmFtZSI6ImVjMWI5NGZkODE2MTRjYzZmOTYzNjViNWU2NGVmMTkzYTA2MTYzZDhhZDU0MTYyYzE4YzQ5MTRkYTgzZTJjYjUiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvTWFpbi5qYXZhIn19LHsiY2hhcl9zdGFydCI6IjEyMDciLCJjaGFyX2VuZCI6IjE3NTYiLCJibG9iX25hbWUiOiJlYzFiOTRmZDgxNjE0Y2M2Zjk2MzY1YjVlNjRlZjE5M2EwNjE2M2Q4YWQ1NDE2MmMxOGM0OTE0ZGE4M2UyY2I1IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL01haW4uamF2YSJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI2MzciLCJibG9iX25hbWUiOiJhZTg1NTBmMWJlYmVmNjRiNDExYTI5MjlmNThjNjJlMjEyZDc5OTdiN2Q0N2U3YTUyZTU2MTdiY2M4M2Q1YjBlIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL1BsYXllci9QbGF5ZXIuamF2YSJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI4MDkiLCJibG9iX25hbWUiOiIxNTZjZWRkNjBkN2QzZDc1NmVjNTY2YjYyNTZjMTQ1OTc1ZjY4ZWFmNGZmMWYxMzJjMDQyMTg4MGJjMjBmM2U0IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL1BsYXllci9IdW1hblBsYXllci5qYXZhIn19LHsiY2hhcl9zdGFydCI6IjgwOSIsImNoYXJfZW5kIjoiMTcxMiIsImJsb2JfbmFtZSI6IjE1NmNlZGQ2MGQ3ZDNkNzU2ZWM1NjZiNjI1NmMxNDU5NzVmNjhlYWY0ZmYxZjEzMmMwNDIxODgwYmMyMGYzZTQiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvUGxheWVyL0h1bWFuUGxheWVyLmphdmEifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiOTM4IiwiYmxvYl9uYW1lIjoiZDM4NDY5MGQ2NWRlYjYxOTcwNjVlZmVjMmYzYTY5MmE1MTY1NzNmZmYxYmUxNTY3OWIzNjVjMjNiMjYzYjExZiIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9VdGlscy9JbnB1dC5qYXZhIn19LHsiY2hhcl9zdGFydCI6IjkzOCIsImNoYXJfZW5kIjoiMTU2MCIsImJsb2JfbmFtZSI6ImQzODQ2OTBkNjVkZWI2MTk3MDY1ZWZlYzJmM2E2OTJhNTE2NTczZmZmMWJlMTU2NzliMzY1YzIzYjI2M2IxMWYiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvVXRpbHMvSW5wdXQuamF2YSJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiIxNzQiLCJibG9iX25hbWUiOiJjNzExNzY0Y2RiZDc1ZDE1MjNhNjQzODc0NGI5MWVhZGUyZmI4ZjE1YjlmZGZmYWM1MzY3ZTI3YTMxNTUwNzhlIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL0dhbWUvQ2VsbFBvcy5qYXZhIn19XX1dLCJmZWVkYmFja1N0YXRlcyI6eyJ0ZW1wLWZlLTMzMzExZjUzLTA4OGQtNDFmMi1iODgyLWFjMDFiNWE4M2RjYSI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn0sInRlbXAtZmUtN2UwZDMwYTQtZWEzZS00MDcxLTg4NTktNTI2NGU3MTE3MDZjIjp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifSwidGVtcC1mZS1lNDIyYmRkNS1jYzg5LTQwZDktYmJiNC04ZjllNGExZjk0MTUiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLWU0OTQ1NjkyLWNhYTEtNGMyYy05NGI0LTFlNjBkNmVlODZlYSI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn19LCJ0b29sVXNlU3RhdGVzIjp7fSwiZHJhZnRFeGNoYW5nZSI6eyJyZXF1ZXN0X21lc3NhZ2UiOiIiLCJyaWNoX3RleHRfanNvbl9yZXByIjp7InR5cGUiOiJkb2MiLCJjb250ZW50IjpbeyJ0eXBlIjoicGFyYWdyYXBoIn1dfSwibWVudGlvbmVkX2l0ZW1zIjpbXSwic3RhdHVzIjoiZHJhZnQifSwicmVxdWVzdElkcyI6W10sImlzUGlubmVkIjpmYWxzZSwiaXNTaGFyZWFibGUiOnRydWUsImV4dHJhRGF0YSI6eyJoYXNEaXJ0eUVkaXRzIjpmYWxzZX0sImRyYWZ0QWN0aXZlQ29udGV4dElkcyI6WyJEOi9nZW9yZ2Vicm93bi8yMDI0LTIwMjUvU2VtZXN0ZXIgMi9DT01QIDIwODAvR29tb2t1LU1pbk1heC9zcmMvUGxheWVyL0FJUGxheWVyLmphdmEiLCJEOi9nZW9yZ2Vicm93bi8yMDI0LTIwMjUvU2VtZXN0ZXIgMi9DT01QIDIwODAvR29tb2t1LU1pbk1heGZhbHNlZmFsc2UiXX0sIjM3NDU1NDc4LTFmMjMtNDRhZC1hNmIzLTgxOTQ0MWIxYWQ4ZSI6eyJpZCI6IjM3NDU1NDc4LTFmMjMtNDRhZC1hNmIzLTgxOTQ0MWIxYWQ4ZSIsImNyZWF0ZWRBdElzbyI6IjIwMjUtMDMtMzFUMjA6MDM6MTQuNzU0WiIsImxhc3RJbnRlcmFjdGVkQXRJc28iOiIyMDI1LTAzLTMxVDIwOjAzOjIyLjA2OFoiLCJjaGF0SGlzdG9yeSI6W3sic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiJiMzJhNmNjNi03MzYzLTQ4OTUtOGFlZC04ZTVhZThjZjgyMjQiLCJyZXF1ZXN0X21lc3NhZ2UiOiJzaW1wbGlmeSB0aGlzIGNvZGUiLCJyaWNoX3RleHRfanNvbl9yZXByIjp7InR5cGUiOiJkb2MiLCJjb250ZW50IjpbeyJ0eXBlIjoicGFyYWdyYXBoIiwiY29udGVudCI6W3sidHlwZSI6InRleHQiLCJ0ZXh0Ijoic2ltcGxpZnkgdGhpcyBjb2RlIn1dfV19LCJtZW50aW9uZWRfaXRlbXMiOltdLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjAsInR5cGUiOjAsImNvbnRlbnQiOiJIZXJlJ3MgYSBzaW1wbGlmaWVkIHZlcnNpb24gb2YgdGhlIG1pbmltYXggYWxnb3JpdGhtOlxuXG48YXVnbWVudF9jb2RlX3NuaXBwZXQgcGF0aD1cInNyYy9QbGF5ZXIvQUlQbGF5ZXIuamF2YVwiIG1vZGU9XCJFRElUXCI+XG5gYGBqYXZhXG4gICAgICAgIC8vIENoZWNrIHRlcm1pbmFsIHN0YXRlc1xuICAgICAgICBpZiAoZ2FtZS5jaGVja0ZvcldpbihwcmV2aW91c01vdmUpKSB7XG4gICAgICAgICAgICByZXR1cm4gIWlzTWF4aW1pemluZyA/IDEwIC0gZGVwdGggOiBkZXB0aCAtIDEwO1xuICAgICAgICB9XG4gICAgICAgIGlmIChnYW1lLmlzRHJhdygpKSByZXR1cm4gMDtcblxuICAgICAgICAvLyBJbml0aWFsaXplIHNjb3JlIGJhc2VkIG9uIHBsYXllclxuICAgICAgICBpbnQgZmluYWxTY29yZSA9IGlzTWF4aW1pemluZyA/IEludGVnZXIuTUlOX1ZBTFVFIDogSW50ZWdlci5NQVhfVkFMVUU7XG4gICAgICAgIFxuICAgICAgICAvLyBFdmFsdWF0ZSBhbGwgcG9zc2libGUgbW92ZXNcbiAgICAgICAgZm9yIChpbnQgaSA9IDA7IGkgPCBnYW1lLmdldFNpemUoKTsgaSsrKSB7XG4gICAgICAgICAgICBmb3IgKGludCBqID0gMDsgaiA8IGdhbWUuZ2V0U2l6ZSgpOyBqKyspIHtcbiAgICAgICAgICAgICAgICBDZWxsUG9zIHBvcyA9IG5ldyBDZWxsUG9zKGksIGopO1xuICAgICAgICAgICAgICAgIGlmICghZ2FtZS5pc0NlbGxFbXB0eShwb3MpKSBjb250aW51ZTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAvLyBNYWtlIG1vdmUgYW5kIGV2YWx1YXRlXG4gICAgICAgICAgICAgICAgR2FtZSBjb3B5ID0gZ2FtZS5jb3B5KCk7XG4gICAgICAgICAgICAgICAgY29weS5zZXRDZWxsKHBvcywgdGhpcy5nZXRTeW1ib2woKSk7XG4gICAgICAgICAgICAgICAgaW50IHNjb3JlID0gbWluaU1heChwb3MsIGNvcHksIGRlcHRoICsgMSwgIWlzTWF4aW1pemluZyk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLy8gVXBkYXRlIGJlc3Qgc2NvcmVcbiAgICAgICAgICAgICAgICBmaW5hbFNjb3JlID0gaXNNYXhpbWl6aW5nID8gTWF0aC5tYXgoZmluYWxTY29yZSwgc2NvcmUpIDogTWF0aC5taW4oZmluYWxTY29yZSwgc2NvcmUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmaW5hbFNjb3JlO1xuYGBgXG48L2F1Z21lbnRfY29kZV9zbmlwcGV0PlxuXG5UaGUgbWFpbiBzaW1wbGlmaWNhdGlvbnM6XG4tIEFkZGVkIGNsZWFyIGNvbW1lbnRzIHRvIHNlcGFyYXRlIGxvZ2ljYWwgc2VjdGlvbnNcbi0gRml4ZWQgYSBidWc6IHdoZW4gcmVjdXJzaXZlbHkgY2FsbGluZyBtaW5pTWF4LCB0aGUgaXNNYXhpbWl6aW5nIHBhcmFtZXRlciBzaG91bGQgdG9nZ2xlICghaXNNYXhpbWl6aW5nKVxuLSBJbXByb3ZlZCByZWFkYWJpbGl0eSB3aXRoIGJldHRlciBzcGFjaW5nIGFuZCBvcmdhbml6YXRpb25cbiJ9LHsiaWQiOjIsInR5cGUiOjIsImNvbnRlbnQiOiIifSx7ImlkIjozLCJ0eXBlIjozLCJjb250ZW50IjoiIn1dLCJzZWVuX3N0YXRlIjoidW5zZWVuIiwicmVzcG9uc2VfdGV4dCI6IkhlcmUncyBhIHNpbXBsaWZpZWQgdmVyc2lvbiBvZiB0aGUgbWluaW1heCBhbGdvcml0aG06XG5cbmBgYGBqYXZhIHBhdGg9c3JjL1BsYXllci9BSVBsYXllci5qYXZhIG1vZGU9RURJVFxuICAgICAgICAvLyBDaGVjayB0ZXJtaW5hbCBzdGF0ZXNcbiAgICAgICAgaWYgKGdhbWUuY2hlY2tGb3JXaW4ocHJldmlvdXNNb3ZlKSkge1xuICAgICAgICAgICAgcmV0dXJuICFpc01heGltaXppbmcgPyAxMCAtIGRlcHRoIDogZGVwdGggLSAxMDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZ2FtZS5pc0RyYXcoKSkgcmV0dXJuIDA7XG5cbiAgICAgICAgLy8gSW5pdGlhbGl6ZSBzY29yZSBiYXNlZCBvbiBwbGF5ZXJcbiAgICAgICAgaW50IGZpbmFsU2NvcmUgPSBpc01heGltaXppbmcgPyBJbnRlZ2VyLk1JTl9WQUxVRSA6IEludGVnZXIuTUFYX1ZBTFVFO1xuICAgICAgICBcbiAgICAgICAgLy8gRXZhbHVhdGUgYWxsIHBvc3NpYmxlIG1vdmVzXG4gICAgICAgIGZvciAoaW50IGkgPSAwOyBpIDwgZ2FtZS5nZXRTaXplKCk7IGkrKykge1xuICAgICAgICAgICAgZm9yIChpbnQgaiA9IDA7IGogPCBnYW1lLmdldFNpemUoKTsgaisrKSB7XG4gICAgICAgICAgICAgICAgQ2VsbFBvcyBwb3MgPSBuZXcgQ2VsbFBvcyhpLCBqKTtcbiAgICAgICAgICAgICAgICBpZiAoIWdhbWUuaXNDZWxsRW1wdHkocG9zKSkgY29udGludWU7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLy8gTWFrZSBtb3ZlIGFuZCBldmFsdWF0ZVxuICAgICAgICAgICAgICAgIEdhbWUgY29weSA9IGdhbWUuY29weSgpO1xuICAgICAgICAgICAgICAgIGNvcHkuc2V0Q2VsbChwb3MsIHRoaXMuZ2V0U3ltYm9sKCkpO1xuICAgICAgICAgICAgICAgIGludCBzY29yZSA9IG1pbmlNYXgocG9zLCBjb3B5LCBkZXB0aCArIDEsICFpc01heGltaXppbmcpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC8vIFVwZGF0ZSBiZXN0IHNjb3JlXG4gICAgICAgICAgICAgICAgZmluYWxTY29yZSA9IGlzTWF4aW1pemluZyA/IE1hdGgubWF4KGZpbmFsU2NvcmUsIHNjb3JlKSA6IE1hdGgubWluKGZpbmFsU2NvcmUsIHNjb3JlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmluYWxTY29yZTtcbmBgYGBcblxuVGhlIG1haW4gc2ltcGxpZmljYXRpb25zOlxuLSBBZGRlZCBjbGVhciBjb21tZW50cyB0byBzZXBhcmF0ZSBsb2dpY2FsIHNlY3Rpb25zXG4tIEZpeGVkIGEgYnVnOiB3aGVuIHJlY3Vyc2l2ZWx5IGNhbGxpbmcgbWluaU1heCwgdGhlIGlzTWF4aW1pemluZyBwYXJhbWV0ZXIgc2hvdWxkIHRvZ2dsZSAoIWlzTWF4aW1pemluZylcbi0gSW1wcm92ZWQgcmVhZGFiaWxpdHkgd2l0aCBiZXR0ZXIgc3BhY2luZyBhbmQgb3JnYW5pemF0aW9uXG4iLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOltdfV0sImZlZWRiYWNrU3RhdGVzIjp7InRlbXAtZmUtYTQ3YjdiYzgtYmI1Yy00ZDU3LWFhMmItYWM0M2QxODU4YzNhIjp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifX0sInRvb2xVc2VTdGF0ZXMiOnt9LCJkcmFmdEV4Y2hhbmdlIjp7InJlcXVlc3RfbWVzc2FnZSI6IiIsInJpY2hfdGV4dF9qc29uX3JlcHIiOnsidHlwZSI6ImRvYyIsImNvbnRlbnQiOlt7InR5cGUiOiJwYXJhZ3JhcGgifV19LCJzdGF0dXMiOiJkcmFmdCJ9LCJkcmFmdEFjdGl2ZUNvbnRleHRJZHMiOlsiRDovZ2VvcmdlYnJvd24vMjAyNC0yMDI1L1NlbWVzdGVyIDIvQ09NUCAyMDgwL0dvbW9rdS1NaW5NYXgvc3JjL1BsYXllci9BSVBsYXllci5qYXZhOkw0MS02MyIsIkQ6L2dlb3JnZWJyb3duLzIwMjQtMjAyNS9TZW1lc3RlciAyL0NPTVAgMjA4MC9Hb21va3UtTWluTWF4L3NyYy9QbGF5ZXIvQUlQbGF5ZXIuamF2YSIsIkQ6L2dlb3JnZWJyb3duLzIwMjQtMjAyNS9TZW1lc3RlciAyL0NPTVAgMjA4MC9Hb21va3UtTWluTWF4ZmFsc2VmYWxzZSJdLCJyZXF1ZXN0SWRzIjpbXSwiaXNQaW5uZWQiOmZhbHNlLCJpc1NoYXJlYWJsZSI6dHJ1ZSwiZXh0cmFEYXRhIjp7Imhhc0RpcnR5RWRpdHMiOmZhbHNlfX0sIjU2ODQ2MjVjLThiYTgtNGMzNy04OWZjLWY5OWE4YTYyNTE5YyI6eyJpZCI6IjU2ODQ2MjVjLThiYTgtNGMzNy04OWZjLWY5OWE4YTYyNTE5YyIsImNyZWF0ZWRBdElzbyI6IjIwMjUtMDMtMzFUMjA6MDQ6MDguNDEwWiIsImxhc3RJbnRlcmFjdGVkQXRJc28iOiIyMDI1LTA0LTA0VDE1OjA4OjE4LjMzM1oiLCJjaGF0SGlzdG9yeSI6W3sic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiJmZWI4MzM2ZS0yODZlLTQ3ZGMtOTAxOC01NjY4NThkMzI2MTgiLCJyZXF1ZXN0X21lc3NhZ2UiOiJzcGxpdCB0aGlzIGZ1bmN0aW9uIGludG8gdHdvIHRvIHJlbW92ZSB0aGUgbmVlZCBmb3IgdGhlIGJvb2wgcGFyYW1ldGVyIiwicmljaF90ZXh0X2pzb25fcmVwciI6eyJ0eXBlIjoiZG9jIiwiY29udGVudCI6W3sidHlwZSI6InBhcmFncmFwaCIsImNvbnRlbnQiOlt7InR5cGUiOiJ0ZXh0IiwidGV4dCI6InNwbGl0IHRoaXMgZnVuY3Rpb24gaW50byB0d28gdG8gcmVtb3ZlIHRoZSBuZWVkIGZvciB0aGUgYm9vbCBwYXJhbWV0ZXIifV19XX0sIm1lbnRpb25lZF9pdGVtcyI6W10sInN0cnVjdHVyZWRfb3V0cHV0X25vZGVzIjpbeyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IkknbGwgc3BsaXQgdGhlIGBtaW5pTWF4YCBmdW5jdGlvbiBpbnRvIHR3byBzZXBhcmF0ZSBmdW5jdGlvbnMgdG8gZWxpbWluYXRlIHRoZSBib29sZWFuIHBhcmFtZXRlci4gSGVyZSdzIGhvdzpcblxuPGF1Z21lbnRfY29kZV9zbmlwcGV0IHBhdGg9XCJzcmMvUGxheWVyL0FJUGxheWVyLmphdmFcIiBtb2RlPVwiRURJVFwiPlxuYGBgamF2YVxuICAgIHByaXZhdGUgaW50IG1pbmlNYXgoQ2VsbFBvcyBwcmV2aW91c01vdmUsIEdhbWUgZ2FtZSwgaW50IGRlcHRoLCBib29sZWFuIGlzTWF4aW1pemluZykge1xuICAgICAgICByZXR1cm4gaXNNYXhpbWl6aW5nID8gXG4gICAgICAgICAgICAgICBtYXhpbWl6aW5nTW92ZShwcmV2aW91c01vdmUsIGdhbWUsIGRlcHRoKSA6IFxuICAgICAgICAgICAgICAgbWluaW1pemluZ01vdmUocHJldmlvdXNNb3ZlLCBnYW1lLCBkZXB0aCk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBpbnQgbWF4aW1pemluZ01vdmUoQ2VsbFBvcyBwcmV2aW91c01vdmUsIEdhbWUgZ2FtZSwgaW50IGRlcHRoKSB7XG4gICAgICAgIGlmIChnYW1lLmNoZWNrRm9yV2luKHByZXZpb3VzTW92ZSkpIHtcbiAgICAgICAgICAgIHJldHVybiBkZXB0aCAtIDEwOyAvLyBPcHBvbmVudCB3b25cbiAgICAgICAgfVxuICAgICAgICBpZiAoZ2FtZS5pc0RyYXcoKSkgcmV0dXJuIDA7XG5cbiAgICAgICAgaW50IGJlc3RTY29yZSA9IEludGVnZXIuTUlOX1ZBTFVFO1xuICAgICAgICBmb3IgKGludCBpID0gMDsgaSA8IGdhbWUuZ2V0U2l6ZSgpOyBpKyspIHtcbiAgICAgICAgICAgIGZvciAoaW50IGogPSAwOyBqIDwgZ2FtZS5nZXRTaXplKCk7IGorKykge1xuICAgICAgICAgICAgICAgIENlbGxQb3MgcG9zID0gbmV3IENlbGxQb3MoaSwgaik7XG4gICAgICAgICAgICAgICAgaWYgKCFnYW1lLmlzQ2VsbEVtcHR5KHBvcykpIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIEdhbWUgY29weSA9IGdhbWUuY29weSgpO1xuICAgICAgICAgICAgICAgIGNvcHkuc2V0Q2VsbChwb3MsIHRoaXMuZ2V0U3ltYm9sKCkpO1xuICAgICAgICAgICAgICAgIGludCBzY29yZSA9IG1pbmltaXppbmdNb3ZlKHBvcywgY29weSwgZGVwdGggKyAxKTtcbiAgICAgICAgICAgICAgICBiZXN0U2NvcmUgPSBNYXRoLm1heChiZXN0U2NvcmUsIHNjb3JlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYmVzdFNjb3JlO1xuICAgIH1cblxuICAgIHByaXZhdGUgaW50IG1pbmltaXppbmdNb3ZlKENlbGxQb3MgcHJldmlvdXNNb3ZlLCBHYW1lIGdhbWUsIGludCBkZXB0aCkge1xuICAgICAgICBpZiAoZ2FtZS5jaGVja0ZvcldpbihwcmV2aW91c01vdmUpKSB7XG4gICAgICAgICAgICByZXR1cm4gMTAgLSBkZXB0aDsgLy8gQUkgd29uXG4gICAgICAgIH1cbiAgICAgICAgaWYgKGdhbWUuaXNEcmF3KCkpIHJldHVybiAwO1xuXG4gICAgICAgIGludCBiZXN0U2NvcmUgPSBJbnRlZ2VyLk1BWF9WQUxVRTtcbiAgICAgICAgZm9yIChpbnQgaSA9IDA7IGkgPCBnYW1lLmdldFNpemUoKTsgaSsrKSB7XG4gICAgICAgICAgICBmb3IgKGludCBqID0gMDsgaiA8IGdhbWUuZ2V0U2l6ZSgpOyBqKyspIHtcbiAgICAgICAgICAgICAgICBDZWxsUG9zIHBvcyA9IG5ldyBDZWxsUG9zKGksIGopO1xuICAgICAgICAgICAgICAgIGlmICghZ2FtZS5pc0NlbGxFbXB0eShwb3MpKSBjb250aW51ZTtcbiAgICAgICAgICAgICAgICBHYW1lIGNvcHkgPSBnYW1lLmNvcHkoKTtcbiAgICAgICAgICAgICAgICBjb3B5LnNldENlbGwocG9zLCB0aGlzLmdldFN5bWJvbCgpKTtcbiAgICAgICAgICAgICAgICBpbnQgc2NvcmUgPSBtYXhpbWl6aW5nTW92ZShwb3MsIGNvcHksIGRlcHRoICsgMSk7XG4gICAgICAgICAgICAgICAgYmVzdFNjb3JlID0gTWF0aC5taW4oYmVzdFNjb3JlLCBzY29yZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGJlc3RTY29yZTtcbiAgICB9XG5gYGBcbjwvYXVnbWVudF9jb2RlX3NuaXBwZXQ+XG5cblRoaXMgcmVmYWN0b3Jpbmcgc3BsaXRzIHRoZSBvcmlnaW5hbCBmdW5jdGlvbiBpbnRvIHR3byBzcGVjaWFsaXplZCBmdW5jdGlvbnMgLSBvbmUgZm9yIG1heGltaXppbmcgbW92ZXMgYW5kIG9uZSBmb3IgbWluaW1pemluZyBtb3Zlcy4gVGhlIG9yaWdpbmFsIGBtaW5pTWF4YCBmdW5jdGlvbiBub3cgc2ltcGx5IHJvdXRlcyB0byB0aGUgYXBwcm9wcmlhdGUgc3BlY2lhbGl6ZWQgZnVuY3Rpb24gYmFzZWQgb24gdGhlIGBpc01heGltaXppbmdgIHBhcmFtZXRlciwgd2hpY2ggY291bGQgYmUgcmVtb3ZlZCBlbnRpcmVseSBpZiB5b3UgdXBkYXRlIGFsbCBjYWxsaW5nIGNvZGUgdG8gdXNlIHRoZSBzcGVjaWZpYyBmdW5jdGlvbnMgZGlyZWN0bHkuXG4ifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IiJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJyZXNwb25zZV90ZXh0IjoiSSdsbCBzcGxpdCB0aGUgYG1pbmlNYXhgIGZ1bmN0aW9uIGludG8gdHdvIHNlcGFyYXRlIGZ1bmN0aW9ucyB0byBlbGltaW5hdGUgdGhlIGJvb2xlYW4gcGFyYW1ldGVyLiBIZXJlJ3MgaG93OlxuXG5gYGBgamF2YSBwYXRoPXNyYy9QbGF5ZXIvQUlQbGF5ZXIuamF2YSBtb2RlPUVESVRcbiAgICBwcml2YXRlIGludCBtaW5pTWF4KENlbGxQb3MgcHJldmlvdXNNb3ZlLCBHYW1lIGdhbWUsIGludCBkZXB0aCwgYm9vbGVhbiBpc01heGltaXppbmcpIHtcbiAgICAgICAgcmV0dXJuIGlzTWF4aW1pemluZyA/IFxuICAgICAgICAgICAgICAgbWF4aW1pemluZ01vdmUocHJldmlvdXNNb3ZlLCBnYW1lLCBkZXB0aCkgOiBcbiAgICAgICAgICAgICAgIG1pbmltaXppbmdNb3ZlKHByZXZpb3VzTW92ZSwgZ2FtZSwgZGVwdGgpO1xuICAgIH1cblxuICAgIHByaXZhdGUgaW50IG1heGltaXppbmdNb3ZlKENlbGxQb3MgcHJldmlvdXNNb3ZlLCBHYW1lIGdhbWUsIGludCBkZXB0aCkge1xuICAgICAgICBpZiAoZ2FtZS5jaGVja0ZvcldpbihwcmV2aW91c01vdmUpKSB7XG4gICAgICAgICAgICByZXR1cm4gZGVwdGggLSAxMDsgLy8gT3Bwb25lbnQgd29uXG4gICAgICAgIH1cbiAgICAgICAgaWYgKGdhbWUuaXNEcmF3KCkpIHJldHVybiAwO1xuXG4gICAgICAgIGludCBiZXN0U2NvcmUgPSBJbnRlZ2VyLk1JTl9WQUxVRTtcbiAgICAgICAgZm9yIChpbnQgaSA9IDA7IGkgPCBnYW1lLmdldFNpemUoKTsgaSsrKSB7XG4gICAgICAgICAgICBmb3IgKGludCBqID0gMDsgaiA8IGdhbWUuZ2V0U2l6ZSgpOyBqKyspIHtcbiAgICAgICAgICAgICAgICBDZWxsUG9zIHBvcyA9IG5ldyBDZWxsUG9zKGksIGopO1xuICAgICAgICAgICAgICAgIGlmICghZ2FtZS5pc0NlbGxFbXB0eShwb3MpKSBjb250aW51ZTtcbiAgICAgICAgICAgICAgICBHYW1lIGNvcHkgPSBnYW1lLmNvcHkoKTtcbiAgICAgICAgICAgICAgICBjb3B5LnNldENlbGwocG9zLCB0aGlzLmdldFN5bWJvbCgpKTtcbiAgICAgICAgICAgICAgICBpbnQgc2NvcmUgPSBtaW5pbWl6aW5nTW92ZShwb3MsIGNvcHksIGRlcHRoICsgMSk7XG4gICAgICAgICAgICAgICAgYmVzdFNjb3JlID0gTWF0aC5tYXgoYmVzdFNjb3JlLCBzY29yZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGJlc3RTY29yZTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGludCBtaW5pbWl6aW5nTW92ZShDZWxsUG9zIHByZXZpb3VzTW92ZSwgR2FtZSBnYW1lLCBpbnQgZGVwdGgpIHtcbiAgICAgICAgaWYgKGdhbWUuY2hlY2tGb3JXaW4ocHJldmlvdXNNb3ZlKSkge1xuICAgICAgICAgICAgcmV0dXJuIDEwIC0gZGVwdGg7IC8vIEFJIHdvblxuICAgICAgICB9XG4gICAgICAgIGlmIChnYW1lLmlzRHJhdygpKSByZXR1cm4gMDtcblxuICAgICAgICBpbnQgYmVzdFNjb3JlID0gSW50ZWdlci5NQVhfVkFMVUU7XG4gICAgICAgIGZvciAoaW50IGkgPSAwOyBpIDwgZ2FtZS5nZXRTaXplKCk7IGkrKykge1xuICAgICAgICAgICAgZm9yIChpbnQgaiA9IDA7IGogPCBnYW1lLmdldFNpemUoKTsgaisrKSB7XG4gICAgICAgICAgICAgICAgQ2VsbFBvcyBwb3MgPSBuZXcgQ2VsbFBvcyhpLCBqKTtcbiAgICAgICAgICAgICAgICBpZiAoIWdhbWUuaXNDZWxsRW1wdHkocG9zKSkgY29udGludWU7XG4gICAgICAgICAgICAgICAgR2FtZSBjb3B5ID0gZ2FtZS5jb3B5KCk7XG4gICAgICAgICAgICAgICAgY29weS5zZXRDZWxsKHBvcywgdGhpcy5nZXRTeW1ib2woKSk7XG4gICAgICAgICAgICAgICAgaW50IHNjb3JlID0gbWF4aW1pemluZ01vdmUocG9zLCBjb3B5LCBkZXB0aCArIDEpO1xuICAgICAgICAgICAgICAgIGJlc3RTY29yZSA9IE1hdGgubWluKGJlc3RTY29yZSwgc2NvcmUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBiZXN0U2NvcmU7XG4gICAgfVxuYGBgYFxuXG5UaGlzIHJlZmFjdG9yaW5nIHNwbGl0cyB0aGUgb3JpZ2luYWwgZnVuY3Rpb24gaW50byB0d28gc3BlY2lhbGl6ZWQgZnVuY3Rpb25zIC0gb25lIGZvciBtYXhpbWl6aW5nIG1vdmVzIGFuZCBvbmUgZm9yIG1pbmltaXppbmcgbW92ZXMuIFRoZSBvcmlnaW5hbCBgbWluaU1heGAgZnVuY3Rpb24gbm93IHNpbXBseSByb3V0ZXMgdG8gdGhlIGFwcHJvcHJpYXRlIHNwZWNpYWxpemVkIGZ1bmN0aW9uIGJhc2VkIG9uIHRoZSBgaXNNYXhpbWl6aW5nYCBwYXJhbWV0ZXIsIHdoaWNoIGNvdWxkIGJlIHJlbW92ZWQgZW50aXJlbHkgaWYgeW91IHVwZGF0ZSBhbGwgY2FsbGluZyBjb2RlIHRvIHVzZSB0aGUgc3BlY2lmaWMgZnVuY3Rpb25zIGRpcmVjdGx5LlxuIiwid29ya3NwYWNlX2ZpbGVfY2h1bmtzIjpbXX1dLCJmZWVkYmFja1N0YXRlcyI6eyJ0ZW1wLWZlLWFhNTYzNzhmLWExYzktNDIyYS1iNTAzLWE3MGFmNDQ0MzY1MyI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn19LCJ0b29sVXNlU3RhdGVzIjp7fSwiZHJhZnRFeGNoYW5nZSI6eyJyZXF1ZXN0X21lc3NhZ2UiOiIiLCJyaWNoX3RleHRfanNvbl9yZXByIjp7InR5cGUiOiJkb2MiLCJjb250ZW50IjpbeyJ0eXBlIjoicGFyYWdyYXBoIn1dfSwibWVudGlvbmVkX2l0ZW1zIjpbXSwic3RhdHVzIjoiZHJhZnQifSwicmVxdWVzdElkcyI6W10sImlzUGlubmVkIjpmYWxzZSwiaXNTaGFyZWFibGUiOnRydWUsImV4dHJhRGF0YSI6eyJoYXNEaXJ0eUVkaXRzIjpmYWxzZX0sImRyYWZ0QWN0aXZlQ29udGV4dElkcyI6WyJEOi9nZW9yZ2Vicm93bi8yMDI0LTIwMjUvU2VtZXN0ZXIgMi9DT01QIDIwODAvR29tb2t1LU1pbk1heC9zcmMvVXRpbHMvSW5wdXQuamF2YSIsIkQ6L2dlb3JnZWJyb3duLzIwMjQtMjAyNS9TZW1lc3RlciAyL0NPTVAgMjA4MC9Hb21va3UtTWluTWF4ZmFsc2VmYWxzZSJdfSwiNzBjMDU2NzUtMTRiYS00ZmM1LWJiNGYtYTAwMTk2NThmZTgxIjp7ImlkIjoiNzBjMDU2NzUtMTRiYS00ZmM1LWJiNGYtYTAwMTk2NThmZTgxIiwiY3JlYXRlZEF0SXNvIjoiMjAyNS0wNC0wNFQxNTowODoyMS41OTJaIiwibGFzdEludGVyYWN0ZWRBdElzbyI6IjIwMjUtMDQtMDRUMTU6MDg6NTUuMDYyWiIsImNoYXRIaXN0b3J5IjpbeyJzdGF0dXMiOiJzdWNjZXNzIiwicmVxdWVzdF9pZCI6ImQzMTk5N2M3LWMwNGQtNDc1ZC1iMTcyLTk1NDQwOTQ3MmVkMyIsInJlcXVlc3RfbWVzc2FnZSI6ImZvciBjb2x1bW4sIHJlYWQgY2hhciBmcm9tICdhJyB0byAnYScgKyA5IGluc3RlYWQgb2YgaW50IHRoZW4gcmV0dXJuIGludCIsInJpY2hfdGV4dF9qc29uX3JlcHIiOnsidHlwZSI6ImRvYyIsImNvbnRlbnQiOlt7InR5cGUiOiJwYXJhZ3JhcGgiLCJjb250ZW50IjpbeyJ0eXBlIjoidGV4dCIsInRleHQiOiJmb3IgY29sdW1uLCByZWFkIGNoYXIgZnJvbSAnYScgdG8gJ2EnICsgOSBpbnN0ZWFkIG9mIGludCB0aGVuIHJldHVybiBpbnQifV19XX0sIm1lbnRpb25lZF9pdGVtcyI6W10sInN0cnVjdHVyZWRfb3V0cHV0X25vZGVzIjpbeyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6Ikkgc2VlIHRoZSBpc3N1ZSBpbiB0aGUgYHJlYWRDb2woKWAgbWV0aG9kLiBZb3Ugd2FudCB0byByZWFkIGEgY2hhcmFjdGVyIChhLWkpIGZvciBjb2x1bW4gaW5wdXQgaW5zdGVhZCBvZiBhIG51bWJlci4gSGVyZSdzIGhvdyB0byBmaXggaXQ6XG5cbjxhdWdtZW50X2NvZGVfc25pcHBldCBwYXRoPVwic3JjL1V0aWxzL0lucHV0LmphdmFcIiBtb2RlPVwiRURJVFwiPlxuYGBgamF2YVxuICAgIHB1YmxpYyBzdGF0aWMgaW50IHJlYWRDb2woKSB7XG4gICAgICAgIGludCB2YWx1ZSA9IC0xO1xuICAgICAgICB3aGlsZSh0cnVlKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIFNjYW5uZXIgaW5wdXQgPSBuZXcgU2Nhbm5lcihTeXN0ZW0uaW4pO1xuICAgICAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnQoXCJFbnRlciBjb2x1bW4gKGEtaSk6IFwiKTtcbiAgICAgICAgICAgICAgICBTdHJpbmcgY29sQ2hhciA9IGlucHV0Lm5leHQoKS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgICAgIGlmIChjb2xDaGFyLmxlbmd0aCgpID09IDEgJiYgY29sQ2hhci5jaGFyQXQoMCkgPj0gJ2EnICYmIGNvbENoYXIuY2hhckF0KDApIDw9ICdpJykge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IGNvbENoYXIuY2hhckF0KDApIC0gJ2EnO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKFwiUGxlYXNlIGVudGVyIGEgbGV0dGVyIGZyb20gYSB0byBpLlwiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGNhdGNoIChFeGNlcHRpb24gZSkge1xuICAgICAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihcIkludmFsaWQgaW5wdXQuIFBsZWFzZSB0cnkgYWdhaW4uXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuYGBgXG48L2F1Z21lbnRfY29kZV9zbmlwcGV0PlxuXG5UaGlzIG1ldGhvZCBub3c6XG4xLiBQcm9tcHRzIGZvciBhIGNvbHVtbiBsZXR0ZXIgKGEtaSlcbjIuIFJlYWRzIGEgc3RyaW5nIGFuZCBjb252ZXJ0cyB0byBsb3dlcmNhc2VcbjMuIENoZWNrcyBpZiBpdCdzIGEgc2luZ2xlIGNoYXJhY3RlciBiZXR3ZWVuICdhJyBhbmQgJ2knXG40LiBDb252ZXJ0cyB0aGUgY2hhcmFjdGVyIHRvIGFuIGludGVnZXIgaW5kZXggKDAtOCkgYnkgc3VidHJhY3RpbmcgJ2EnXG41LiBSZXR1cm5zIHRoZSBpbmRleCB2YWx1ZVxuIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiJzcmMvVXRpbHMvSW5wdXQuamF2YTowLTkzOFxuc3JjL1V0aWxzL0lucHV0LmphdmE6OTM4LTE1NjBcbnNyYy9QbGF5ZXIvSHVtYW5QbGF5ZXIuamF2YTowLTg1NFxuc3JjL1BsYXllci9IdW1hblBsYXllci5qYXZhOjg1NC0xMDI5XG5zcmMvUGxheWVyL0h1bWFuUGxheWVyLmphdmE6MTAyOS0xNjk1XG5zcmMvUGxheWVyL0h1bWFuUGxheWVyLmphdmE6MTY5NS0xOTY2XG5zcmMvTWFpbi5qYXZhOjAtMTMyXG5zcmMvTWFpbi5qYXZhOjEzMi0xMDkwXG5zcmMvTWFpbi5qYXZhOjEwOTAtMTYxNlxuc3JjL01haW4uamF2YToxNjE2LTI0ODlcbnNyYy9HYW1lL0dhbWUuamF2YTowLTc0Nlxuc3JjL0dhbWUvR2FtZS5qYXZhOjc0Ni0xNTU4XG5zcmMvR2FtZS9HYW1lLmphdmE6MTU1OC0yMTU2XG5zcmMvR2FtZS9HYW1lLmphdmE6MjE1Ni0yNTk4XG5zcmMvR2FtZS9HYW1lLmphdmE6MjU5OC0zNjc1XG5zcmMvR2FtZS9HYW1lLmphdmE6MzY3NS00Mzk3XG5zcmMvR2FtZS9HYW1lLmphdmE6NDM5Ny01MTc0XG5zcmMvR2FtZS9HYW1lLmphdmE6NTE3NC02MDUxXG5zcmMvR2FtZS9HYW1lLmphdmE6NjA1MS02OTE1XG5zcmMvUGxheWVyL1BsYXllci5qYXZhOjAtNjc1XG5zcmMvUGxheWVyL0FJUGxheWVyLmphdmE6MC01MzFcbnNyYy9QbGF5ZXIvQUlQbGF5ZXIuamF2YTo1MzEtMTI1OFxuc3JjL1BsYXllci9BSVBsYXllci5qYXZhOjEyNTgtMjIzNVxuc3JjL1BsYXllci9BSVBsYXllci5qYXZhOjIyMzUtMjk4NFxuc3JjL1BsYXllci9BSVBsYXllci5qYXZhOjI5ODQtMzcyMyJ9XSwic2Vlbl9zdGF0ZSI6InVuc2VlbiIsInJlc3BvbnNlX3RleHQiOiJJIHNlZSB0aGUgaXNzdWUgaW4gdGhlIGByZWFkQ29sKClgIG1ldGhvZC4gWW91IHdhbnQgdG8gcmVhZCBhIGNoYXJhY3RlciAoYS1pKSBmb3IgY29sdW1uIGlucHV0IGluc3RlYWQgb2YgYSBudW1iZXIuIEhlcmUncyBob3cgdG8gZml4IGl0OlxuXG5gYGBgamF2YSBwYXRoPXNyYy9VdGlscy9JbnB1dC5qYXZhIG1vZGU9RURJVFxuICAgIHB1YmxpYyBzdGF0aWMgaW50IHJlYWRDb2woKSB7XG4gICAgICAgIGludCB2YWx1ZSA9IC0xO1xuICAgICAgICB3aGlsZSh0cnVlKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIFNjYW5uZXIgaW5wdXQgPSBuZXcgU2Nhbm5lcihTeXN0ZW0uaW4pO1xuICAgICAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnQoXCJFbnRlciBjb2x1bW4gKGEtaSk6IFwiKTtcbiAgICAgICAgICAgICAgICBTdHJpbmcgY29sQ2hhciA9IGlucHV0Lm5leHQoKS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgICAgIGlmIChjb2xDaGFyLmxlbmd0aCgpID09IDEgJiYgY29sQ2hhci5jaGFyQXQoMCkgPj0gJ2EnICYmIGNvbENoYXIuY2hhckF0KDApIDw9ICdpJykge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IGNvbENoYXIuY2hhckF0KDApIC0gJ2EnO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKFwiUGxlYXNlIGVudGVyIGEgbGV0dGVyIGZyb20gYSB0byBpLlwiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGNhdGNoIChFeGNlcHRpb24gZSkge1xuICAgICAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihcIkludmFsaWQgaW5wdXQuIFBsZWFzZSB0cnkgYWdhaW4uXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuYGBgYFxuXG5UaGlzIG1ldGhvZCBub3c6XG4xLiBQcm9tcHRzIGZvciBhIGNvbHVtbiBsZXR0ZXIgKGEtaSlcbjIuIFJlYWRzIGEgc3RyaW5nIGFuZCBjb252ZXJ0cyB0byBsb3dlcmNhc2VcbjMuIENoZWNrcyBpZiBpdCdzIGEgc2luZ2xlIGNoYXJhY3RlciBiZXR3ZWVuICdhJyBhbmQgJ2knXG40LiBDb252ZXJ0cyB0aGUgY2hhcmFjdGVyIHRvIGFuIGludGVnZXIgaW5kZXggKDAtOCkgYnkgc3VidHJhY3RpbmcgJ2EnXG41LiBSZXR1cm5zIHRoZSBpbmRleCB2YWx1ZVxuIiwid29ya3NwYWNlX2ZpbGVfY2h1bmtzIjpbeyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiOTM4IiwiYmxvYl9uYW1lIjoiZDM4NDY5MGQ2NWRlYjYxOTcwNjVlZmVjMmYzYTY5MmE1MTY1NzNmZmYxYmUxNTY3OWIzNjVjMjNiMjYzYjExZiIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9VdGlscy9JbnB1dC5qYXZhIn19LHsiY2hhcl9zdGFydCI6IjkzOCIsImNoYXJfZW5kIjoiMTU2MCIsImJsb2JfbmFtZSI6ImQzODQ2OTBkNjVkZWI2MTk3MDY1ZWZlYzJmM2E2OTJhNTE2NTczZmZmMWJlMTU2NzliMzY1YzIzYjI2M2IxMWYiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvVXRpbHMvSW5wdXQuamF2YSJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI4NTQiLCJibG9iX25hbWUiOiIzYzJmN2Y0YTlhMzAzZThmMTYzYWVmNzQ2ZGY5OWQxMGQ1Mzc3YTRmNWRlYTU1ZGE2ZjllMjM4ZDI2NzcyMDdhIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL1BsYXllci9IdW1hblBsYXllci5qYXZhIn19LHsiY2hhcl9zdGFydCI6Ijg1NCIsImNoYXJfZW5kIjoiMTAyOSIsImJsb2JfbmFtZSI6IjNjMmY3ZjRhOWEzMDNlOGYxNjNhZWY3NDZkZjk5ZDEwZDUzNzdhNGY1ZGVhNTVkYTZmOWUyMzhkMjY3NzIwN2EiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvUGxheWVyL0h1bWFuUGxheWVyLmphdmEifX0seyJjaGFyX3N0YXJ0IjoiMTAyOSIsImNoYXJfZW5kIjoiMTY5NSIsImJsb2JfbmFtZSI6IjNjMmY3ZjRhOWEzMDNlOGYxNjNhZWY3NDZkZjk5ZDEwZDUzNzdhNGY1ZGVhNTVkYTZmOWUyMzhkMjY3NzIwN2EiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvUGxheWVyL0h1bWFuUGxheWVyLmphdmEifX0seyJjaGFyX3N0YXJ0IjoiMTY5NSIsImNoYXJfZW5kIjoiMTk2NiIsImJsb2JfbmFtZSI6IjNjMmY3ZjRhOWEzMDNlOGYxNjNhZWY3NDZkZjk5ZDEwZDUzNzdhNGY1ZGVhNTVkYTZmOWUyMzhkMjY3NzIwN2EiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvUGxheWVyL0h1bWFuUGxheWVyLmphdmEifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiMTMyIiwiYmxvYl9uYW1lIjoiNDE3NzAwYjRmZGZkNWJlZDM3NWNhN2NlYTgyMDY3ZjE5ZTM2MzBkMzEwZWViNTllODE5MzFlZDQ0ZTMxNTdmMCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9NYWluLmphdmEifX0seyJjaGFyX3N0YXJ0IjoiMTMyIiwiY2hhcl9lbmQiOiIxMDkwIiwiYmxvYl9uYW1lIjoiNDE3NzAwYjRmZGZkNWJlZDM3NWNhN2NlYTgyMDY3ZjE5ZTM2MzBkMzEwZWViNTllODE5MzFlZDQ0ZTMxNTdmMCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9NYWluLmphdmEifX0seyJjaGFyX3N0YXJ0IjoiMTA5MCIsImNoYXJfZW5kIjoiMTYxNiIsImJsb2JfbmFtZSI6IjQxNzcwMGI0ZmRmZDViZWQzNzVjYTdjZWE4MjA2N2YxOWUzNjMwZDMxMGVlYjU5ZTgxOTMxZWQ0NGUzMTU3ZjAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvTWFpbi5qYXZhIn19LHsiY2hhcl9zdGFydCI6IjE2MTYiLCJjaGFyX2VuZCI6IjI0ODkiLCJibG9iX25hbWUiOiI0MTc3MDBiNGZkZmQ1YmVkMzc1Y2E3Y2VhODIwNjdmMTllMzYzMGQzMTBlZWI1OWU4MTkzMWVkNDRlMzE1N2YwIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL01haW4uamF2YSJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI3NDYiLCJibG9iX25hbWUiOiIyNTgxZTc4MjI4YzgwOGY4NGFmZDFiOGZjY2U2ZDYxYzJkMTVkNjhjMjNmNTdhYzNjOGQzOTYzZTk1ZWZjNDM1IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL0dhbWUvR2FtZS5qYXZhIn19LHsiY2hhcl9zdGFydCI6Ijc0NiIsImNoYXJfZW5kIjoiMTU1OCIsImJsb2JfbmFtZSI6IjI1ODFlNzgyMjhjODA4Zjg0YWZkMWI4ZmNjZTZkNjFjMmQxNWQ2OGMyM2Y1N2FjM2M4ZDM5NjNlOTVlZmM0MzUiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvR2FtZS9HYW1lLmphdmEifX0seyJjaGFyX3N0YXJ0IjoiMTU1OCIsImNoYXJfZW5kIjoiMjE1NiIsImJsb2JfbmFtZSI6IjI1ODFlNzgyMjhjODA4Zjg0YWZkMWI4ZmNjZTZkNjFjMmQxNWQ2OGMyM2Y1N2FjM2M4ZDM5NjNlOTVlZmM0MzUiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvR2FtZS9HYW1lLmphdmEifX0seyJjaGFyX3N0YXJ0IjoiMjE1NiIsImNoYXJfZW5kIjoiMjU5OCIsImJsb2JfbmFtZSI6IjI1ODFlNzgyMjhjODA4Zjg0YWZkMWI4ZmNjZTZkNjFjMmQxNWQ2OGMyM2Y1N2FjM2M4ZDM5NjNlOTVlZmM0MzUiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvR2FtZS9HYW1lLmphdmEifX0seyJjaGFyX3N0YXJ0IjoiMjU5OCIsImNoYXJfZW5kIjoiMzY3NSIsImJsb2JfbmFtZSI6IjI1ODFlNzgyMjhjODA4Zjg0YWZkMWI4ZmNjZTZkNjFjMmQxNWQ2OGMyM2Y1N2FjM2M4ZDM5NjNlOTVlZmM0MzUiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvR2FtZS9HYW1lLmphdmEifX0seyJjaGFyX3N0YXJ0IjoiMzY3NSIsImNoYXJfZW5kIjoiNDM5NyIsImJsb2JfbmFtZSI6IjI1ODFlNzgyMjhjODA4Zjg0YWZkMWI4ZmNjZTZkNjFjMmQxNWQ2OGMyM2Y1N2FjM2M4ZDM5NjNlOTVlZmM0MzUiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvR2FtZS9HYW1lLmphdmEifX0seyJjaGFyX3N0YXJ0IjoiNDM5NyIsImNoYXJfZW5kIjoiNTE3NCIsImJsb2JfbmFtZSI6IjI1ODFlNzgyMjhjODA4Zjg0YWZkMWI4ZmNjZTZkNjFjMmQxNWQ2OGMyM2Y1N2FjM2M4ZDM5NjNlOTVlZmM0MzUiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvR2FtZS9HYW1lLmphdmEifX0seyJjaGFyX3N0YXJ0IjoiNTE3NCIsImNoYXJfZW5kIjoiNjA1MSIsImJsb2JfbmFtZSI6IjI1ODFlNzgyMjhjODA4Zjg0YWZkMWI4ZmNjZTZkNjFjMmQxNWQ2OGMyM2Y1N2FjM2M4ZDM5NjNlOTVlZmM0MzUiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvR2FtZS9HYW1lLmphdmEifX0seyJjaGFyX3N0YXJ0IjoiNjA1MSIsImNoYXJfZW5kIjoiNjkxNSIsImJsb2JfbmFtZSI6IjI1ODFlNzgyMjhjODA4Zjg0YWZkMWI4ZmNjZTZkNjFjMmQxNWQ2OGMyM2Y1N2FjM2M4ZDM5NjNlOTVlZmM0MzUiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvR2FtZS9HYW1lLmphdmEifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNjc1IiwiYmxvYl9uYW1lIjoiY2I0ZGUzYWY3ZDFmNWJhZDFiYjE2YzMyM2Y0MDBmODNkNGE3MjAyYzVmOWE2MDJjNmRkZDk2OTcxZmMzYjhjNCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9QbGF5ZXIvUGxheWVyLmphdmEifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNTMxIiwiYmxvYl9uYW1lIjoiZTZjODY3Y2Q3YTQxMjk3Y2Y3MDM1MjIyMzI3Yzk2NjZlNmMyMGMwYzg2NGI0MWZhZDM0MzUyODhkYjA2MzVmOCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9QbGF5ZXIvQUlQbGF5ZXIuamF2YSJ9fSx7ImNoYXJfc3RhcnQiOiI1MzEiLCJjaGFyX2VuZCI6IjEyNTgiLCJibG9iX25hbWUiOiJlNmM4NjdjZDdhNDEyOTdjZjcwMzUyMjIzMjdjOTY2NmU2YzIwYzBjODY0YjQxZmFkMzQzNTI4OGRiMDYzNWY4IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL1BsYXllci9BSVBsYXllci5qYXZhIn19LHsiY2hhcl9zdGFydCI6IjEyNTgiLCJjaGFyX2VuZCI6IjIyMzUiLCJibG9iX25hbWUiOiJlNmM4NjdjZDdhNDEyOTdjZjcwMzUyMjIzMjdjOTY2NmU2YzIwYzBjODY0YjQxZmFkMzQzNTI4OGRiMDYzNWY4IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL1BsYXllci9BSVBsYXllci5qYXZhIn19LHsiY2hhcl9zdGFydCI6IjIyMzUiLCJjaGFyX2VuZCI6IjI5ODQiLCJibG9iX25hbWUiOiJlNmM4NjdjZDdhNDEyOTdjZjcwMzUyMjIzMjdjOTY2NmU2YzIwYzBjODY0YjQxZmFkMzQzNTI4OGRiMDYzNWY4IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL1BsYXllci9BSVBsYXllci5qYXZhIn19LHsiY2hhcl9zdGFydCI6IjI5ODQiLCJjaGFyX2VuZCI6IjM3MjMiLCJibG9iX25hbWUiOiJlNmM4NjdjZDdhNDEyOTdjZjcwMzUyMjIzMjdjOTY2NmU2YzIwYzBjODY0YjQxZmFkMzQzNTI4OGRiMDYzNWY4IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL1BsYXllci9BSVBsYXllci5qYXZhIn19XX1dLCJmZWVkYmFja1N0YXRlcyI6eyJ0ZW1wLWZlLWFjMDQ4ZDQ2LWQ2ZmMtNDNlZS1hN2YzLWE3YmUxMzIzMjZmYiI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn19LCJ0b29sVXNlU3RhdGVzIjp7fSwiZHJhZnRFeGNoYW5nZSI6eyJyZXF1ZXN0X21lc3NhZ2UiOiIiLCJyaWNoX3RleHRfanNvbl9yZXByIjp7InR5cGUiOiJkb2MiLCJjb250ZW50IjpbeyJ0eXBlIjoicGFyYWdyYXBoIn1dfSwic3RhdHVzIjoiZHJhZnQifSwicmVxdWVzdElkcyI6W10sImlzUGlubmVkIjpmYWxzZSwiaXNTaGFyZWFibGUiOnRydWUsImV4dHJhRGF0YSI6eyJoYXNEaXJ0eUVkaXRzIjpmYWxzZX19fSwiaXNDb250ZXh0UGFuZU9wZW4iOmZhbHNlLCJpc0FjdGlvbnNQYW5lT3BlbiI6ZmFsc2UsImFnZW50RXhlY3V0aW9uTW9kZSI6Im1hbnVhbCJ9" />
      </map>
    </option>
  </component>
</project>